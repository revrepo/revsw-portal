!function(){"use strict";angular.module("revapm.Portal.Config",[])}(),function(){"use strict";angular.module("revapm.Portal.Config").constant("$config",{SERVER_URL:"",API_URL:window.API_URL||"https://testsjc20-api01.revsw.net/v1",STATUS:{OK:200,BAD_REQUEST:400,UNAUTHORIZED:401,TWO_FACTOR_AUTH_REQUIRED:403},ROLE:{USER:"user",RESELLER:"reseller",ADMIN:"admin",REVADMIN:"revadmin"},EVENTS:{DOMAIN_CHANGED:"domain_changed"},DOMAIN_STATUS_ICONS:{InProgress:"glyphicon-refresh spin",Published:"glyphicon-ok-circle text-success",Modified:"glyphicon-ok-circle text-primary"},DOMAIN_STATUS_REFRESH_INTERVAL:5e3})}(),function(){"use strict";angular.module("revapm.Portal.Config").constant("ActivityPhrase",{ACTIVITY_TYPE:{add:"Added",modify:"Modified","delete":"Deleted",publish:"Published",purge:"Purged"},ACTIVITY_TARGET:{user:"User",account:"Company",domain:"Domain",purge:"Cache",apikey:"API Key",object:"Object"}})}(),function(){"use strict";angular.module("revapm.Portal.Shared",["ngTouch","ui.bootstrap.tpls","ui.bootstrap.modal"])}(),function(){"use strict";function revAPIHttpInterceptor($q,$config,$rootScope){function endsWith(str,suffix){return-1!==str.indexOf(suffix,str.length-suffix.length)}return{responseError:function(rejection){return"POST"==rejection.config.method&&endsWith(rejection.config.url,"/2fa/enable")?$q.reject(rejection):(rejection.status==$config.STATUS.UNAUTHORIZED&&$rootScope.$emit("unauthorized"),rejection.status||$rootScope.$emit("not.connected"),$q.reject(rejection))}}}angular.module("revapm.Portal.Shared").factory("revAPIHttpInterceptor",revAPIHttpInterceptor),revAPIHttpInterceptor.$inject=["$q","$config","$rootScope"]}(),function(){"use strict";function AlertService($interval){function add(alert,timeout){alerts.push(alert),timeout&&$interval(remove.bind(this,alert),timeout,1)}function success(msg,timeout){angular.isUndefined(timeout)&&(timeout=5e3),add({type:"success",message:msg||""},timeout)}function danger(msg,timeout){angular.isUndefined(timeout)&&(timeout=5e3),angular.isObject(msg)&&(msg=msg&&msg.data&&msg.data.message?msg.data.message:"Something wrong..."),add({type:"danger",message:msg||""},timeout)}function remove(alert){var idx=alerts.indexOf(alert);~idx&&alerts.splice(idx,1)}function clear(){alerts.splice(0,alerts.length)}var alerts=[];return{alerts:alerts,success:success,danger:danger,add:add,remove:remove,clear:clear}}angular.module("revapm.Portal.Shared").factory("AlertService",AlertService),AlertService.$inject=["$interval"]}(),function(){"use strict";function alertListDirective(AlertService){return{transclude:!0,template:'<alert type="{{i.type}}" ng-repeat="i in as.alerts">{{i.message}}</alert>',controller:["$scope",function($scope){$scope.as=AlertService}]}}angular.module("revapm.Portal.Shared").directive("alertList",alertListDirective),alertListDirective.$inject=["AlertService"]}(),function(){"use strict";function alertDirective(){return{transclude:!0,template:'<div ng-class="class" ng-transclude></div>',scope:{type:"@"},controller:["$scope",function($scope){$scope["class"]="alert",$scope.type&&($scope["class"]="alert alert-"+$scope.type)}]}}angular.module("revapm.Portal.Shared").directive("alert",alertDirective)}(),function(){"use strict";function ConfirmModalInstanceCtrl($scope,$modalInstance,model){$scope.model=model,$scope.ok=function(){$modalInstance.close(!0)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}angular.module("revapm.Portal.Shared").controller("ConfirmModalInstanceCtrl",ConfirmModalInstanceCtrl),ConfirmModalInstanceCtrl.$inject=["$scope","$modalInstance","model"]}(),function(){"use strict";function CRUDController($window,$config,AlertService,$q,User,$anchorScroll,$modal){function CRUDControllerImpl($scope,$stateParams){$scope.auth=User,$scope.alertService=AlertService,$scope._loading=!1,$scope.state="",$scope.params=$stateParams,$scope.resourse=null,$scope.records=[],$scope.model=null,$scope.quickFilter="",$scope.deniedFields=[],$scope.page={hasPrevPage:!1,hasNextPage:!0,current:1,pages:[1]},$scope.filter={limit:25,skip:0,predicate:"",reverse:!1},$scope.confirm=function(template,resolve){angular.isObject(template)&&(resolve=template,template=""),angular.isObject(resolve)&&(resolve={model:resolve});var modalInstance=$modal.open({animation:!0,templateUrl:template||"parts/modal/confirmDelete.html",controller:"ConfirmModalInstanceCtrl",size:"md",resolve:resolve||{}});return modalInstance.result},$scope.loading=function(loading){return angular.isUndefined(loading)?$scope._loading:void($scope._loading=Boolean(loading))},$scope.setState=function(state){if(!state)throw new Error("Wrong state provided.");$scope.state=state},$scope.clearQuickFilter=function(filter){filter?filter="":$scope.quickFilter=""},$scope.clearModel=function(model){model||(model=$scope.model),angular.forEach(model,function(val,key){model[key]=""}),model=null},$scope.clearList=function(){$scope.records.splice(0,$scope.records.length)},$scope.setResource=function(resource){$scope.resource=resource},$scope.setDeniedFields=function(fields){angular.isArray(fields)&&($scope.deniedFields=fields)},$scope.scrollTop=function(){$anchorScroll("top")},$scope.order=function(predicate){$scope.filter.reverse=$scope.filter.predicate===predicate?!$scope.filter.reverse:!1,$scope.filter.predicate=predicate},$scope.checkFilterPage=function(){$scope.filter.skip>0&&$scope.goToPage(1)},$scope._checkPagination=function(){$scope.records.length<$scope.filter.limit+$scope.filter.skip?$scope.page.hasNextPage=!1:$scope.page.hasNextPage=!0,$scope.filter.skip>0?$scope.page.hasPrevPage=!0:$scope.page.hasPrevPage=!1;var pages=Math.ceil($scope.records.length/$scope.filter.limit);$scope.page.pages.splice(0,$scope.page.pages.length);for(var i=1;pages>=i;i++)$scope.page.pages.push(i);$scope.page.current=Math.ceil($scope.filter.skip/$scope.filter.limit)+1},$scope.nextPage=function(){$scope.page.hasNextPage&&$scope.page.current!==$scope.page.pages.length&&($scope.filter.skip+=$scope.filter.limit,$scope._checkPagination(),$scope.scrollTop())},$scope.prevPage=function(){$scope.page.hasPrevPage&&($scope.filter.skip-=$scope.filter.limit,$scope.filter.skip<0&&($scope.filter.skip=0),$scope._checkPagination(),$scope.scrollTop())},$scope.goToPage=function(page){$scope.page.current!=page&&($scope.page.current=page,$scope.filter.skip=page*$scope.filter.limit-$scope.filter.limit,$scope._checkPagination(),$scope.scrollTop())},$scope.list=function(){if(!$scope.resource)throw new Error("No resource provided.");return $scope.loading(!0),$scope.resource.query(function(data){return $scope.records=data,$scope._checkPagination(),data}).$promise["finally"](function(){$scope.loading(!1)})},$scope["delete"]=function(model){if(model){if(!angular.isFunction(model.$remove))throw new Error("Wrong model provided.");return model.loading=!0,model.$remove().then(function(data){var idx=$scope.records.indexOf(model);return data.statusCode==$config.STATUS.OK&&$scope.records.splice(idx,1),data})["finally"](function(){model.loading=!1})}},$scope.create=function(model){if(!$scope.resource)throw new Error("No resource provided.");$scope.alertService.clear(),$scope.loading(!0);var record=new $scope.resource(model);return record.$save().then(function(data){return $scope.list(),$scope.clearModel(model),data})["catch"](function(data){return data.status==$config.STATUS.BAD_REQUEST&&data.data&&data.data.message&&$scope.alertService.danger(data.data.message,5e3),$q.reject(data)})["finally"](function(){$scope.loading(!1)})},$scope.get=function(id){if(!$scope.resource)throw new Error("No resource provided.");return $scope.clearModel(),$scope.alertService.clear(),$scope.loading(!0),$scope.resource.get({id:id}).$promise.then(function(record){return $scope.model=record,record})["finally"](function(){$scope.loading(!1)})},$scope.update=function(params,model){angular.isObject(params)&&!model&&(model=params,params=void 0);var id=model.id;return params||(params={id:id}),angular.forEach($scope.deniedFields,function(val){model[val]&&delete model[val]}),$scope.alertService.clear(),$scope.loading(!0),$scope.resource.update(params,model).$promise.then(function(data){return $scope.list(),$scope.$emit("list"),data})["finally"](function(){$scope.loading(!1)})},$scope.$on("list",function(){$scope.list()})}return CRUDControllerImpl}angular.module("revapm.Portal.Shared").factory("CRUDController",CRUDController),CRUDController.$inject=["$window","$config","AlertService","$q","User","$anchorScroll","$modal"]}(),function(){"use strict";function crudPaginationDirective(){return{restrict:"AE",templateUrl:"parts/shared/crud/pagination.html"}}angular.module("revapm.Portal.Shared").directive("crudPagination",crudPaginationDirective)}(),function(){"use strict";function listFilterDirective(){return{restrict:"AE",template:'<form class="form-inline"><div class="form-group"><label for="search">Search:&nbsp;</label><input type="text" class="form-control" id="search" placeholder="" ng-model="quickFilter" ng-change="checkFilterPage()">&nbsp;&nbsp;<i class="glyphicon glyphicon-remove" ng-show="quickFilter != \'\'" ng-click="quickFilter = \'\'"></i></div></form>'}}angular.module("revapm.Portal.Shared").directive("listFilter",listFilterDirective)}(),function(){"use strict";function UtilFactory(){function toBps(bytes,delay){return delay=delay||1800,angular.isNumber(delay)||(delay=1800),bytes/delay*8}function convertTraffic(bps){var sizes=["Bps","Kbps","Mbps","Gbps","Tbps"];if(0==bps||!bps)return"0 Bps";var i=parseInt(Math.floor(Math.log(bps)/Math.log(1024))),result=Math.round(bps/Math.pow(1024,i),2)+" "+(sizes[i]||"");return result||""}function toRPS(bytes,delay,isNumber){angular.isNumber(delay)||(delay=1800);var result=(bytes/delay).toFixed(1);return isNumber?(result=parseFloat(result),result||0):result||""}return{convertTraffic:convertTraffic,toBps:toBps,toRPS:toRPS}}angular.module("revapm.Portal.Shared").factory("Util",UtilFactory)}(),function(){"use strict";angular.module("revapm.Portal.Resources",["ngResource","revapm.Portal.Shared","revapm.Portal.Config"])}(),function(){"use strict";function ResourceConfig($httpProvider){$httpProvider.interceptors.push("revAPIHttpInterceptor")}angular.module("revapm.Portal.Resources").config(ResourceConfig),ResourceConfig.$inject=["$httpProvider"]}(),function(){"use strict";function ResourceFactory($resource){return function(url,params,methods){var defaults={update:{method:"PUT",isArray:!1},create:{method:"POST"}};methods=angular.extend(defaults,methods);var resource=$resource(url,params,methods);return resource.prototype.$save=function(){return this.id?this.$update():this.$create()},resource}}angular.module("revapm.Portal.Resources").factory("Resource",ResourceFactory),ResourceFactory.$inject=["$resource"]}(),function(){"use strict";function CompaniesResource(Resource,$config){return Resource($config.API_URL+"/accounts/:id",{id:"@id"})}angular.module("revapm.Portal.Resources").factory("Companies",CompaniesResource),CompaniesResource.$inject=["Resource","$config"]}(),function(){"use strict";function DomainsResource(Resource,$config){return Resource($config.API_URL+"/domain_configs/:id",{id:"@id"},{status:{url:$config.API_URL+"/domain_configs/:id/config_status",method:"GET",isArray:!1}})}angular.module("revapm.Portal.Resources").factory("DomainsConfig",DomainsResource),DomainsResource.$inject=["Resource","$config"]}(),function(){"use strict";function UsersResource(Resource,$config){return Resource($config.API_URL+"/users/:id",{id:"@user_id"})}angular.module("revapm.Portal.Resources").factory("Users",UsersResource),UsersResource.$inject=["Resource","$config"]}(),function(){"use strict";function CacheResource(Resource,$config){return Resource($config.API_URL+"/purge/:requestId",{requestId:""},{purge:{method:"POST",isArray:!1},status:{method:"GET",isArray:!1}})}angular.module("revapm.Portal.Resources").factory("Cache",CacheResource),CacheResource.$inject=["Resource","$config"]}(),function(){"use strict";function StatsResource(Resource,$config){return Resource($config.API_URL+"/stats/:domainId",{domainId:""},{os:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"os",count:10}},device:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"device",count:10}},country:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"country",count:10}},lm_rtt_country:{method:"GET",url:$config.API_URL+"/stats/lastmile_rtt/:domainId",params:{report_type:"country",count:10}},gbt_country:{method:"GET",url:$config.API_URL+"/stats/gbt/:domainId",params:{report_type:"country",count:10}},protocol:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"protocol"}},httpProtocol:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"http_protocol"}},httpMethod:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"http_method"}},statusCode:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"status_code"}},contentType:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"content_type"}},cacheStatus:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"cache_status"}},quic:{method:"GET",url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"QUIC"}},traffic:{method:"GET"},referer:{url:$config.API_URL+"/stats/top/:domainId",params:{report_type:"referer"}},topObjects:{method:"GET",url:$config.API_URL+"/stats/top_objects/:domainId",params:{}}})}angular.module("revapm.Portal.Resources").factory("Stats",StatsResource),StatsResource.$inject=["Resource","$config"]}(),function(){"use strict";function CountriesResource(Resource,$config){return Resource($config.API_URL+"/countries/list",{},{query:{isArray:!1}})}angular.module("revapm.Portal.Resources").factory("Countries",CountriesResource),CountriesResource.$inject=["Resource","$config"]}(),function(){"use strict";function ActivityResource(Resource,$config){return Resource($config.API_URL+"/activity/:action",{action:""},{query:{method:"GET",isArray:!1},summary:{method:"GET",isArray:!1}})}angular.module("revapm.Portal.Resources").factory("Activity",ActivityResource),ActivityResource.$inject=["Resource","$config"]}(),function(){"use strict";function TwoFactorAuthResource(Resource,$config){return Resource($config.API_URL+"/2fa/:action/:userId",{action:"",userId:""},{init:{method:"GET",isArray:!1,params:{action:"init"}},enable:{method:"POST",isArray:!1,params:{action:"enable"}},disable:{method:"POST",isArray:!1,params:{action:"disable"}}})}angular.module("revapm.Portal.Resources").factory("TwoFactorAuth",TwoFactorAuthResource),TwoFactorAuthResource.$inject=["Resource","$config"]}(),function(){"use strict";function KeysResource(Resource,$config){return Resource($config.API_URL+"/api_keys/:id",{id:"@id"},{})}angular.module("revapm.Portal.Resources").factory("ApiKeys",KeysResource),KeysResource.$inject=["Resource","$config"]}(),function(){"use strict";function authRun($http,$localStorage){$localStorage.Authorization&&($http.defaults.headers.common.Authorization=$localStorage.Authorization)}angular.module("revapm.Portal.Auth",["ngStorage","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","base64","ui.router"]).run(authRun),authRun.$inject=["$http","$localStorage"]}(),function(){"use strict";function configure($httpProvider){}angular.module("revapm.Portal.Auth").config(configure),configure.$inject=["$httpProvider"]}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("login",{url:"/login",views:{layout:{controller:"LoginController",templateUrl:"parts/auth/login.html"}}}).state("index.restore",{url:"/password/reset/:token",views:{page:{controller:"PasswordRestoreController",templateUrl:"parts/auth/reset-password.html"}}})}angular.module("revapm.Portal.Auth").config(routesConfig),routesConfig.$inject=["$stateProvider"]}(),function(){"use strict";function AuthRun($rootScope,$state){$rootScope.$on("unauthorized",function(){console.log("No logged in"),$state.go("login")}),$rootScope.$on("not.connected",function(){"login"!==$state.current.name&&$state.go("login")})}angular.module("revapm.Portal.Auth").run(AuthRun),AuthRun.$inject=["$rootScope","$state"]}(),function(){"use strict";function User($localStorage,$http,$config,$q,DomainsConfig){function clearAll(){localStorage&&localStorage.clear()}function getToken(){return $localStorage.Authorization||!1}function setToken(token){token&&($localStorage.Authorization=token)}function isAuthed(){var token=getToken();return token?!0:!1}function addAuthHeaderForAPI(token){$localStorage.Authorization="Bearer "+token,$http.defaults.headers.common.Authorization="Bearer "+token,$http.defaults.headers.common["Content-Type"]="application/json"}function clearAuthHeaderForAPI(){$localStorage.Authorization=void 0,delete $http.defaults.headers.common.Authorization}function login(email,password,oneTimePassword){if(!email||!password)throw new Error("Please fill email and password");var authData={email:email,password:password};return oneTimePassword&&(authData.oneTimePassword=oneTimePassword),$http.post($config.API_URL+"/authenticate",authData).then(function(data){return data.status===$config.STATUS.OK?(setToken(data.data.token),addAuthHeaderForAPI(data.data.token),$http.get($config.API_URL+"/users/myself").then(function(data){if(!data||data.status!==$config.STATUS.OK)throw new Error(data.response);var res=data.data;if(res.role!==$config.ROLE.USER&&res.role!==$config.ROLE.ADMIN&&res.role!==$config.ROLE.RESELLER&&res.role!==$config.ROLE.REVADMIN)throw new Error("You do not have permission");return $localStorage.isLoggedIn=!0,$localStorage.isCAdmin=!0,$localStorage.user=res,data})):data})["catch"](function(err){return clearAuthHeaderForAPI(),$q.reject(err)})}function logout(){setToken(),$localStorage.user=void 0,clearAuthHeaderForAPI(),clearAll()}function getUser(){return $localStorage.user||null}function isAdmin(){var user=getUser();return Boolean(isAuthed()&&user&&user.role===$config.ROLE.ADMIN)}function isReseller(){var user=getUser();return Boolean(isAuthed()&&user&&user.role===$config.ROLE.RESELLER)}function isRevadmin(){var user=getUser();return Boolean(isAuthed()&&user&&user.role===$config.ROLE.REVADMIN)}function isUser(){var user=getUser();return Boolean(isAuthed()&&user&&user.role===$config.ROLE.USER)}function reloadUser(){return $http.get($config.API_URL+"/users/myself").then(function(data){if(!data||data.status!==$config.STATUS.OK)throw new Error(data.response);return $localStorage.user=data.data,data})}function forgotPassword(email){return $http.post($config.API_URL+"/forgot",{email:email}).then(function(data){if(data&&data.status!==$config.STATUS.OK)throw new Error(data.response);return data})}function resetPassword(token,password){return $http.post($config.API_URL+"/reset/"+token,{password:password}).then(function(data){if(data&&data.status!==$config.STATUS.OK)throw new Error(data.response);return data})}function updatePassword(currentPassword,newPassword){var user=getUser();if(!isAuthed()||!user.user_id)throw new Error("User not authentificated");return $http.put($config.API_URL+"/users/password/"+user.user_id,{current_password:currentPassword,new_password:newPassword}).then(function(data){if(data&&data.status!==$config.STATUS.OK)throw new Error(data.response);return login(user.email,newPassword),data})}function getUserDomains(reload){return $q(function(resolve,reject){return domains&&domains.length>0&&!reload?resolve(domains):void DomainsConfig.query().$promise.then(function(data){domains=data,resolve(domains)})["catch"](function(err){domains=[],resolve(domains)})}.bind(this))}function selectDomain(domain){domainSelected=domain}function getSelectedDomain(){return domainSelected}var domains=[],domainSelected=null;return{getToken:getToken,setToken:setToken,isAuthed:isAuthed,login:login,logout:logout,getUser:getUser,isAdmin:isAdmin,isReseller:isReseller,isRevadmin:isRevadmin,isUser:isUser,reloadUser:reloadUser,forgotPassword:forgotPassword,resetPassword:resetPassword,updatePassword:updatePassword,getUserDomains:getUserDomains,selectDomain:selectDomain,getSelectedDomain:getSelectedDomain}}angular.module("revapm.Portal.Auth").factory("User",User),User.$inject=["$localStorage","$http","$config","$q","DomainsConfig"]}(),function(){"use strict";function selectAccountDomain(User,$rootScope,$config){return{restrict:"AE",templateUrl:"parts/auth/menu/select-account-domain.html",controller:["$scope",function($scope){$scope.domain=User.getSelectedDomain(),$scope._loading=!0,$scope.onDomainChange=function(){User.selectDomain($scope.domain),$rootScope.$broadcast($config.EVENTS.DOMAIN_CHANGED,{domain:$scope.domain})},User.getUserDomains().then(function(domains){$scope.domains=domains,$scope._loading=!1})}]}}angular.module("revapm.Portal.Auth").directive("selectAccountDomain",selectAccountDomain),selectAccountDomain.$inject=["User","$rootScope","$config"]}(),function(){"use strict";function disableTwoFactorAuthDirective(User,Users,TwoFactorAuth,AlertService,$modal){return{restrict:"AE",replace:!0,templateUrl:"parts/auth/2fa/disable-two-factor-auth.html",scope:{ngUserId:"="},controller:["$scope",function($scope){$scope._loading=!1,$scope.currentUser=User.getUser(),$scope.twoFactorAuthEnabled=!1,$scope.isMyUser=!1,$scope.loadUserDetails=function(){return $scope.isMyUser=!1,$scope.ngUserId?($scope.twoFactorAuthEnabled=!1,$scope._loading=!0,void Users.get({id:$scope.ngUserId}).$promise.then(function(data){$scope.twoFactorAuthEnabled=Boolean(data.two_factor_auth_enabled),$scope.isMyUser=Boolean($scope.ngUserId==data.user_id)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})):void console.log("You did not provide userId. User ng-user-id for directive !")},$scope._disable=function(oneTimePassword){if($scope.twoFactorAuthEnabled){if(!$scope.ngUserId)return void console.log("You did not provide userId. User ng-user-id for directive !");$scope._loading=!0;var data={};TwoFactorAuth.disable({userId:$scope.ngUserId},data).$promise.then(function(data){$scope.currentUser.user_id==$scope.ngUserId&&User.reloadUser(),AlertService.success(data.message),$scope.twoFactorAuthEnabled=!1})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})}},$scope.disable=function(){$scope.confirm().then($scope._disable)},$scope.confirm=function(){var modalInstance=$modal.open({animation:!0,templateUrl:"confirm2FaDisable.html",controller:"ConfirmModalInstanceCtrl",size:"md",resolve:{model:{isMyUser:$scope.isMyUser,user:$scope.currentUser}}});return modalInstance.result},$scope.$watch("ngUserId",function(){$scope.ngUserId&&$scope.loadUserDetails()})}]}}angular.module("revapm.Portal.Auth").directive("disableTwoFactorAuth",disableTwoFactorAuthDirective),disableTwoFactorAuthDirective.$inject=["User","Users","TwoFactorAuth","AlertService","$modal"]}(),function(){"use strict";function PasswordRestoreController($scope,User,$stateParams,AlertService,$timeout,$state){$scope.alerts=AlertService,$scope.token=$stateParams.token,$scope.password="",$scope.passwordRepeat="",$scope.loading=!1,$scope.reset=function(){return AlertService.clear(),$scope.password&&$scope.passwordRepeat&&$scope.password==$scope.passwordRepeat?($scope.loading=!0,void User.resetPassword($scope.token,$scope.password).then(function(data){data.data&&data.data.message&&(AlertService.success(data.data.message,5e3),$timeout(function(){$state.go("login")},3e3))})["catch"](function(err){err.data&&err.data.message&&AlertService.danger(err.data.message,5e3)})["finally"](function(){$scope.loading=!1})):void AlertService.danger("Passwords did not match",5e3)}}angular.module("revapm.Portal.Auth").controller("PasswordRestoreController",PasswordRestoreController),PasswordRestoreController.$inject=["$scope","User","$stateParams","AlertService","$timeout","$state"]}(),function(){"use strict";function ForgotPasswordController($scope,$modalInstance,User,AlertService){$scope.data={email:"",loading:!1},$scope.close=function(){$scope.data.loading=!1,$modalInstance.dismiss()},$scope.forgot=function(){$scope.data.email?($scope.data.loading=!0,User.forgotPassword($scope.data.email).then(function(data){data&&data.data&&data.data.message&&$modalInstance.close(data.data.message)})["catch"](function(err){AlertService.danger(err.data.message)})["finally"](function(){$scope.data.loading=!1})):AlertService.danger("Wrong email address")}}angular.module("revapm.Portal.Auth").controller("ForgotPasswordController",ForgotPasswordController),ForgotPasswordController.$inject=["$scope","$modalInstance","User","AlertService"]}(),function(){"use strict";function TwoFactorAuthCodeModalController($scope,$modalInstance,auth,User,AlertService,$config){$scope.data={code:"",loading:!1},$scope.close=function(){$scope.data.loading=!1,$modalInstance.dismiss()},$scope.login=function(){if(!$scope.data.code)return void AlertService.danger("Please enter One Time Password",3e3);AlertService.clear(),$scope.data.loading=!0;try{User.login(auth.email,auth.password,$scope.data.code).then(function(data){$modalInstance.close(data)})["catch"](function(err){err.status==$config.STATUS.UNAUTHORIZED&&AlertService.danger("Wrong one Time Password",5e3),err.data.message&&AlertService.danger(err.data.message,5e3)})["finally"](function(){$scope.data.loading=!1})}catch(e){AlertService.danger(e.message),$scope.data.loading=!1}}}angular.module("revapm.Portal.Auth").controller("TwoFactorAuthCodeModalController",TwoFactorAuthCodeModalController),TwoFactorAuthCodeModalController.$inject=["$scope","$modalInstance","auth","User","AlertService","$config"]}(),function(){"use strict";function LoginController($scope,User,$state,AlertService,$config,$modal){document.querySelector("body").style.paddingTop="0",$scope._loading=!1,$scope.style={height:document.documentElement.clientHeight+"px"};var images=["images/bg/bay_bridge.jpg","images/bg/burney_falls.jpg","images/bg/golden_gate.jpg","images/bg/mirror_lake.jpg","images/bg/painted_ladies.jpg","images/bg/tunnel_view.jpg","images/bg/twin_peaks.jpg","images/bg/yosemite_hill.jpg","images/bg/yosemite_valley.jpg"];$scope.randomImage=images[Math.floor(Math.random()*images.length)],$scope.login=function(email,pass){AlertService.clear(),$scope._loading=!0;try{User.login(email,pass).then(function(data){$state.go("index")})["catch"](function(err){err.status||AlertService.danger("Something get wrong",5e3),err.status==$config.STATUS.TWO_FACTOR_AUTH_REQUIRED&&$scope.enter2faCode(email,pass),err.status==$config.STATUS.UNAUTHORIZED&&AlertService.danger("Wrong username or password",5e3),err.data.message&&AlertService.danger(err.data.message,5e3)})["finally"](function(){$scope._loading=!1})}catch(e){AlertService.danger(e.message),$scope._loading=!1}},localStorage&&localStorage.email&&localStorage.password&&$scope.login(localStorage.email,localStorage.password),$scope.enter2faCode=function(email,password){var modalInstance=$modal.open({templateUrl:"parts/auth/two-factor-auth-code.html",controller:"TwoFactorAuthCodeModalController",size:"md",resolve:{auth:function(){return{email:email,password:password}}}});modalInstance.result.then(function(data){$state.go("index")})},$scope.forgotPassword=function(){var modalInstance=$modal.open({templateUrl:"parts/auth/forgot-password.html",controller:"ForgotPasswordController",size:"md"});modalInstance.result.then(function(message){AlertService.success(message,5e3)})}}angular.module("revapm.Portal.Auth").controller("LoginController",LoginController),LoginController.$inject=["$scope","User","$state","AlertService","$config","$modal"]}(),function(){"use strict";function userLoginLogoutDirective(User,$state){return{restrict:"AE",replace:!0,templateUrl:"parts/auth/block/user-login-logout.html",scope:{},link:function($scope){$scope.isAuthorized=User.isAuthed(),$scope.user=User.getUser(),$scope.logout=function(){User.logout(),$state.go("login")}}}}angular.module("revapm.Portal.Auth").directive("userLoginLogout",userLoginLogoutDirective),userLoginLogoutDirective.$inject=["User","$state"]}(),function(){"use strict";angular.module("revapm.Portal.Profile",["ui.router","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.accountSettings.profile",{url:"/profile",views:{main:{controller:"ProfileEditController",templateUrl:"parts/profile/edit.html"}}}).state("index.accountSettings.activitylog",{url:"/activitylog",views:{main:{controller:"ActivityLogController",templateUrl:"parts/profile/activity-log.html"}}}).state("index.accountSettings.2fa",{url:"/2fa",views:{main:{controller:"TwoFactorAuthController",templateUrl:"parts/profile/two-factor-auth.html"}}})}angular.module("revapm.Portal.Profile").config(routesConfig),routesConfig.$inject=["$stateProvider"]}(),function(){"use strict";function ProfileEditController($scope,User,AlertService){$scope.user=User.getUser(),$scope.pass={current_password:"",new_password:"",confirm_password:""},$scope.clearPassword=function(){$scope.pass={current_password:"",new_password:"",confirm_password:""}},$scope.updatePassword=function(){return $scope.pass.current_password&&$scope.pass.new_password?$scope.pass.new_password!=$scope.pass.confirm_password?void AlertService.danger("Passwords did not match",5e3):User.updatePassword($scope.pass.current_password,$scope.pass.new_password).then(function(data){return $scope.clearPassword(),AlertService.success("Your password updated",5e3),data})["catch"](function(err){err.data&&err.data.message?AlertService.danger(err.data.message):AlertService.danger("Something goes wrong")}):void AlertService.danger("Please fill all fields. (New password should be at least 8 charecters length)",5e3)},$scope.updateProfile=function(user){$scope.updatePassword()}}angular.module("revapm.Portal.Profile").controller("ProfileEditController",ProfileEditController),ProfileEditController.$inject=["$scope","User","AlertService"]}(),function(){"use strict";function ActivityLogController($scope,CRUDController,Activity,$injector,$stateParams,ActivityPhrase,$modal){$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.setResource(Activity),$scope.setState("index.accountSettings.companies"),$scope.list=function(){if(!$scope.resource)throw new Error("No resource provided.");return $scope.loading(!0),$scope.resource.query(function(data){return $scope.records=data.data,$scope._checkPagination(),data}).$promise["finally"](function(){$scope.loading(!1)})},$scope.list(),$scope.getActivityType=function(val){return ActivityPhrase.ACTIVITY_TYPE&&ActivityPhrase.ACTIVITY_TYPE[val]?ActivityPhrase.ACTIVITY_TYPE[val]:"Unknown activity type: "+val},$scope.getActivityTarget=function(log){if(!ActivityPhrase.ACTIVITY_TARGET||!ActivityPhrase.ACTIVITY_TARGET[log.activity_target])return"Unknown activity target: "+log.activity_target;var target="";return log.target_name&&(target=" ("+log.target_name+")"),ActivityPhrase.ACTIVITY_TARGET[log.activity_target]+target},$scope.showDetails=function(log){var log=angular.copy(log);log.target_object=JSON.stringify(log.target_object,null,"    "),log.activity=$scope.getActivityType(log.activity_type),log.activity+=" "+$scope.getActivityTarget(log);var modalInstance=$modal.open({animation:!0,templateUrl:"activityDetails.html",controller:"ConfirmModalInstanceCtrl",size:"md",resolve:{model:log}});return modalInstance.result}}angular.module("revapm.Portal.Profile").controller("ActivityLogController",ActivityLogController),ActivityLogController.$inject=["$scope","CRUDController","Activity","$injector","$stateParams","ActivityPhrase","$modal"]}(),function(){"use strict";function TwoFactorAuthController($scope,User,TwoFactorAuth,AlertService,$modal){$scope._loading=!1,$scope.user=User.getUser(),$scope.twoFAEnabled=$scope.user&&$scope.user.two_factor_auth_enabled,$scope.qrImg="",$scope.asciiCode="",
$scope.showDisable=!1,$scope.clearCodes=function(){$scope.qrImg="",$scope.asciiCode="",$scope.oneTimePassword="",$scope.hideDisablePart()},$scope.updateUserProfile=function(enabled){$scope.twoFAEnabled=enabled,$scope.clearCodes(),User.reloadUser()},$scope.init=function(){$scope._loading=!0,TwoFactorAuth.init().$promise.then(function(data){data.google_auth_qr&&($scope.qrImg=data.google_auth_qr),data.ascii&&($scope.asciiCode=data.ascii)})["catch"](function(err){AlertService.danger(err,5e3)})["finally"](function(){$scope._loading=!1})},$scope.enable=function(oneTimePassword){return oneTimePassword?($scope._loading=!0,void TwoFactorAuth.enable({oneTimePassword:oneTimePassword}).$promise.then(function(data){AlertService.success(data.message),$scope.updateUserProfile(!0)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})):(AlertService.danger("Please enter your One Time Password"),void angular.element("#one-time-password").focus())},$scope.showDisablePart=function(){$scope.showDisable=!0},$scope.hideDisablePart=function(){$scope.showDisable=!1},$scope._disable=function(){$scope._loading=!0,TwoFactorAuth.disable({userId:$scope.user.user_id},{}).$promise.then(function(data){AlertService.success(data.message),$scope.updateUserProfile(!1)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})},$scope.confirm=function(){var modalInstance=$modal.open({animation:!0,templateUrl:"confirm2FaDisable.html",controller:"ConfirmModalInstanceCtrl",size:"md",resolve:{model:{isMyUser:$scope.isMyUser,user:$scope.currentUser}}});return modalInstance.result},$scope.disable=function(){$scope.confirm().then($scope._disable)}}angular.module("revapm.Portal.Profile").controller("TwoFactorAuthController",TwoFactorAuthController),TwoFactorAuthController.$inject=["$scope","User","TwoFactorAuth","AlertService","$modal"]}(),function(){"use strict";angular.module("revapm.Portal.Users",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.accountSettings.users",{url:"/users",views:{main:{controller:"UsersCrudController",templateUrl:"parts/users/list.html"}}}).state("index.accountSettings.users.new",{url:"/new",views:{page:{templateUrl:"parts/users/new.html"}}}).state("index.accountSettings.users.edit",{url:"/edit/:id",views:{page:{controller:"UsersCrudController",templateUrl:"parts/users/edit.html"}}})}angular.module("revapm.Portal.Users").config(routesConfig),routesConfig.$inject=["$stateProvider"]}(),function(){"use strict";function UsersCrudController($scope,CRUDController,Users,$injector,$stateParams,Companies,DomainsConfig,$state){return $injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.auth.isUser()?void $state.go("index.accountSettings.profile"):($scope.setState("index.accountSettings.users"),$scope.setResource(Users),$scope.roles=["user","admin"],$scope.auth.isRevadmin()&&($scope.roles.push("reseller"),$scope.roles.push("revadmin")),$scope.companies=Companies.query(),$scope.domains=DomainsConfig.query(),$scope.model||($scope.model={theme:"light",access_control_list:{dashBoard:!0,reports:!1,configure:!1,test:!1,readOnly:!1}}),$scope.getUser=function(id){$scope.get(id)["catch"](function(err){$scope.alertService.danger("Could not load domain details")})},$scope.deleteUser=function(model){$scope.confirm("confirmModal.html",model).then(function(){$scope["delete"](model)})},$scope.updateUser=function(model){model&&($scope.alertService.clear(),model.id=model.user_id,$scope.update(model).then(function(data){$scope.alertService.success("User updated",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something ment wrong",5e3)}))},$scope.createUser=function(model){if(model){if(model.passwordConfirm!==model.password)return void $scope.alertService.danger("Passwords did not match",5e3);$scope.alertService.clear(),delete model.passwordConfirm,model.access_control_list.dashBoard=!0,$scope.create(model).then(function(data){$scope.alertService.success("User created",5e3)})}},void $scope.list())}angular.module("revapm.Portal.Users").controller("UsersCrudController",UsersCrudController),UsersCrudController.$inject=["$scope","CRUDController","Users","$injector","$stateParams","Companies","DomainsConfig","$state"]}(),function(){"use strict";angular.module("revapm.Portal.Domains",["ngStorage","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ui.select","ng.jsoneditor"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.webApp.domains",{url:"/domains",views:{main:{controller:"DomainsCrudController",templateUrl:"parts/domains/_list.html"}}}).state("index.webApp.domains.advanced",{url:"/configure/:id",views:{page:{controller:"DomainsConfigureAdvancedController",templateUrl:"parts/domains/_configure_advanced.html"}}}).state("index.webApp.domains.new",{url:"/new",views:{page:{templateUrl:"parts/domains/_new.html"}}}).state("index.webApp.domains.edit",{url:"/edit/:id",views:{page:{templateUrl:"parts/domains/_edit.html",controller:"DomainsCrudController"}}})}angular.module("revapm.Portal.Domains").config(routesConfig),routesConfig.$inject=["$stateProvider"]}(),function(){"use strict";function domainSelectDirective(User,$localStorage,AlertService){return{restrict:"AE",templateUrl:"parts/domains/domain-select/domain-select.html",scope:{selectOne:"=",ngModel:"=",onSelect:"&"},controller:["$scope",function($scope){$scope.domains=[],$scope._loading=!0,$scope.data={model:""},$scope.onModelSelect=function($model){$scope.ngModel=$model,$localStorage.selectedDomain=$model},User.getUserDomains(!0).then(function(domains){if($scope.domains=domains,1===domains.length&&$scope.selectOne&&($scope.onModelSelect($scope.domains[0]),$scope.ngDomain=$scope.domains[0]),$localStorage.selectedDomain&&$localStorage.selectedDomain.id){var ind=_.findIndex(domains,function(d){return d.id===$localStorage.selectedDomain.id});$scope.onModelSelect($scope.domains[ind]),$scope.ngDomain=$scope.domains[ind]}})["catch"](function(){AlertService.danger("Oops something wrong")})["finally"](function(){$scope._loading=!1}),$scope.$watch("ngModel",function(){$scope.onSelect()})}]}}angular.module("revapm.Portal.Domains").directive("domainSelect",domainSelectDirective),domainSelectDirective.$inject=["User","$localStorage","AlertService"]}(),function(){"use strict";function domainStagingStatus(DomainsConfig,$config,$timeout,$rootScope){return{template:'<i class="glyphicon" ng-class="iconStaging" tooltip="{{tooltipStaging}}"></i>&nbsp;&nbsp;&nbsp;<i class="glyphicon" ng-class="iconGlobal" tooltip="{{tooltipGlobal}}"></i>',scope:{ngId:"="},controller:["$scope",function($scope){var intervalPromise,domainId;$scope.iconStaging="glyphicon-refresh spin",$scope.tooltipStaging="Staging status",$scope.iconGlobal="glyphicon-refresh spin",$scope.tooltipGlobal="Global status",$scope.startRefresh=function(){domainId&&(intervalPromise=$timeout($scope.fetchStatus,$config.DOMAIN_STATUS_REFRESH_INTERVAL))},$scope.stopRefresh=function(){angular.isDefined(intervalPromise)&&($timeout.cancel(intervalPromise),intervalPromise=void 0)},$scope.fetchStatus=function(id){(id||domainId)&&(!id&&domainId&&(id=domainId),DomainsConfig.status({id:id}).$promise.then(function(data){$config.DOMAIN_STATUS_ICONS[data.staging_status]&&($scope.iconStaging=$config.DOMAIN_STATUS_ICONS[data.staging_status]),$scope.tooltipStaging="Staging status: "+data.staging_status,$config.DOMAIN_STATUS_ICONS[data.global_status]&&($scope.iconGlobal=$config.DOMAIN_STATUS_ICONS[data.global_status]),$scope.tooltipGlobal="Global status: "+data.global_status,$scope.startRefresh()})["catch"](function(err){console.log(err),$scope.iconStaging="glyphicon-remove text-danger",$scope.tooltipStaging="Staging status: Error",$scope.iconGlobal="glyphicon-remove text-danger",$scope.tooltipGlobal="Global status: Error",$scope.stopRefresh()}))},$scope.$on("$destroy",function(){$scope.stopRefresh()}),$rootScope.$on("$stateChangeStart",function(event){$scope.stopRefresh()}),$scope.$watch("ngId",function(newValue){newValue&&(domainId=newValue,$scope.fetchStatus(newValue))})}]}}angular.module("revapm.Portal.Domains").directive("domainStagingStatus",domainStagingStatus),domainStagingStatus.$inject=["DomainsConfig","$config","$timeout","$rootScope"]}(),function(){"use strict";function DomainsCrudController($scope,$localStorage,CRUDController,DomainsConfig,$injector,$stateParams,$config,Companies,$http,$q,$state){$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.setState("index.webApp.domains"),$scope.setResource(DomainsConfig),$scope.$on("$stateChangeSuccess",function(state){$state.is($scope.state)&&$scope.list()}),$scope.locations=[],$scope.companies=[],$scope.model={},$scope.fetchLocations=function(){$http.get($config.API_URL+"/locations/firstmile").then(function(data){data.status==$config.STATUS.OK&&($scope.locations=data.data)})},$scope.fetchCompanies=function(companyIds){var promises=[];companyIds.forEach(function(id){promises.push(Companies.get({id:id}).$promise)}),$q.all(promises).then(function(data){$scope.companies=data})},$scope.prepareSimpleDomainUpdate=function(model){return model=_.clone(model.toJSON()),model.rev_component_bp&&(delete model.rev_component_bp.cache_opt_choice,delete model.rev_component_bp.certificate_urls,delete model.rev_component_bp.ssl_certificates),model.domain_name&&delete model.domain_name,delete model.origin_protocol,delete model.id,model},$scope.auth.isReseller()?Companies.query(function(list){$scope.companies=list}):angular.isArray($scope.auth.getUser().companyId)?1===$scope.auth.getUser().companyId.length?$scope.model.account_id=$scope.auth.getUser().companyId[0]:$scope.fetchCompanies($scope.auth.getUser().companyId):$scope.model.account_id=$scope.auth.getUser().companyId,$scope.fetchLocations(),$scope.getDomain=function(id){$scope.get(id)["catch"](function(err){$scope.alertService.danger("Could not load domain details")})},$scope.deleteDomain=function(model){$scope.confirm("confirmModal.html",model).then(function(){$scope["delete"](model).then(function(data){$scope.list()})})},$scope.createDomain=function(model){$scope.create(model).then(function(){$scope.alertService.success("Domain created",5e3)})},$scope.publishDomain=function(model){if(model){model.id||(model.id=$stateParams.id);var modelId=model.id;$scope.confirm("confirmPublishModal.html",model).then(function(){model=$scope.prepareSimpleDomainUpdate(model),$scope.update({id:modelId,options:"publish"},model).then(function(data){$scope.alertService.success("Domain configuration published",5e3)})["catch"](function(err){$scope.alertService.danger(err)})})}},$scope.validateDomain=function(model){if(model){model.id||(model.id=$stateParams.id);var modelId=model.id;model=$scope.prepareSimpleDomainUpdate(model),$scope.update({id:modelId,options:"verify_only"},model).then(function(data){$scope.alertService.success("Domain configuration is correct",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something ment wrong",5e3)})}},$scope.updateDomain=function(model){if(model){model.id||(model.id=$stateParams.id);var modelId=model.id;$scope.confirm("confirmUpdateModal.html",model).then(function(){model=$scope.prepareSimpleDomainUpdate(model),$scope.update({id:modelId},model).then(function(){$scope.alertService.success("Domain updated",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something ment wrong",5e3)})})}},$scope.storeToStorage=function(model){$localStorage.selectedDomain=model}}angular.module("revapm.Portal.Domains").controller("DomainsCrudController",DomainsCrudController),DomainsCrudController.$inject=["$scope","$localStorage","CRUDController","DomainsConfig","$injector","$stateParams","$config","Companies","$http","$q","$state"]}(),function(){"use strict";function DomainsConfigureController($scope,User,$config,Domains,$timeout,AlertService){$scope._loading=!1,$scope.obj={data:{},options:{mode:"code",modes:["code","view"],error:function(err){alert(err.toString())}}},$timeout(function(){$scope.obj.options.mode="code"},10),$scope.domain=User.getSelectedDomain(),$scope.update=function(){return $scope.domain&&$scope.domain.id?($scope._loading=!0,void Domains.detailsUpdate({id:$scope.domain.id},$scope.obj.data).$promise.then(function(data){data.message&&AlertService.success(data.message,5e3)})["catch"](function(err){err.data&&err.data.message?AlertService.danger(err.data.message):AlertService.danger("Something wrong")})["finally"](function(){$scope._loading=!1})):void AlertService.danger("Please select domain first")},$scope.$on($config.EVENTS.DOMAIN_CHANGED,function(){$scope.domain=User.getSelectedDomain(),$scope.domain&&$scope.domain.id&&($scope._loading=!0,Domains.details({id:$scope.domain.id}).$promise.then(function(data){$scope.obj.data=data.toJSON()})["finally"](function(){$scope._loading=!1}))})}angular.module("revapm.Portal.Domains").controller("DomainsConfigureController",DomainsConfigureController),DomainsConfigureController.$inject=["$scope","User","$config","Domains","$timeout","AlertService"]}(),function(){"use strict";function DomainsConfigureAdvancedController($scope,User,$config,DomainsConfig,$timeout,AlertService,$stateParams){$scope.id=$stateParams.id,$scope.clearDomain=function(model){return model.rev_component_bp&&(delete model.rev_component_bp.cache_opt_choice,delete model.rev_component_bp.certificate_urls,delete model.rev_component_bp.ssl_certificates),model.domain_name&&delete model.domain_name,delete model.origin_protocol,delete model.id,model},DomainsConfig.get({id:$scope.id}).$promise.then(function(data){$scope.domain=data,$scope.obj.data=$scope.clearDomain(data.toJSON())})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1}),$scope._loading=!1,$scope.obj={data:{},options:{mode:"code",modes:["code","view"],error:function(err){alert(err.toString())}}},$timeout(function(){$scope.obj.options.mode="code"},10),$scope.verify=function(){return $scope.id?($scope._loading=!0,void DomainsConfig.update({id:$scope.id,options:"verify_only"},$scope.obj.data).$promise.then(function(data){$scope.alertService.success("Domain configuration is correct",5e3)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})):void AlertService.danger("Please select domain first")},$scope.publish=function(){return $scope.id?void $scope.confirm("confirmPublishModal.html",$scope.domain).then(function(){$scope._loading=!0,DomainsConfig.update({id:$scope.id,options:"publish"},$scope.obj.data).$promise.then(function(data){$scope.alertService.success("Domain configuration is published",5e3)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1})}):void AlertService.danger("Please select domain first")},$scope.update=function(){return $scope.id?void $scope.confirm("confirmUpdateModal.html",$scope.domain).then(function(){$scope._loading=!0,DomainsConfig.update({id:$scope.id},$scope.obj.data).$promise.then(function(data){data.message&&AlertService.success(data.message,5e3)})["catch"](function(err){err.data&&err.data.message?AlertService.danger(err.data.message):AlertService.danger("Something wrong")})["finally"](function(){$scope._loading=!1})}):void AlertService.danger("Please select domain first")}}angular.module("revapm.Portal.Domains").controller("DomainsConfigureAdvancedController",DomainsConfigureAdvancedController),DomainsConfigureAdvancedController.$inject=["$scope","User","$config","DomainsConfig","$timeout","AlertService","$stateParams"]}(),function(){"use strict";angular.module("revapm.Portal.Companies",["ui.router","revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.accountSettings.companies",{url:"/companies",views:{main:{controller:"CompaniesCrudController",templateUrl:"parts/companies/list.html"}}}).state("index.accountSettings.companies.new",{url:"/new",views:{page:{templateUrl:"parts/companies/new.html"}}}).state("index.accountSettings.companies.edit",{url:"/edit/:id",views:{page:{templateUrl:"parts/companies/edit.html",controller:"CompaniesCrudController"}}})}angular.module("revapm.Portal.Companies").config(routesConfig),routesConfig.$inject=["$stateProvider"]}(),function(){"use strict";function CompaniesCrudController($scope,CRUDController,Companies,$injector,$stateParams,$config){$injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.setResource(Companies),$scope.setState("index.accountSettings.companies"),$scope.list(),$scope.getCompany=function(id){$scope.get(id)["catch"](function(err){$scope.alertService.danger("Could not load company details")})},$scope.deleteCompany=function(model){$scope.confirm("confirmModal.html",model).then(function(){$scope["delete"](model)})},$scope.createCompany=function(model){model&&$scope.create(model).then(function(){$scope.alertService.success("Company created",5e3),$scope.auth.reloadUser()})},$scope.updateCompany=function(model){$scope.update(model).then(function(){$scope.alertService.success("Company updated",5e3)})["catch"](function(err){$scope.alertService.danger(err.data.message||"Oops something ment wrong",5e3)})}}angular.module("revapm.Portal.Companies").controller("CompaniesCrudController",CompaniesCrudController),CompaniesCrudController.$inject=["$scope","CRUDController","Companies","$injector","$stateParams","$config"]}(),function(){"use strict";angular.module("revapm.Portal.Cache",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ng.jsoneditor"])}(),function(){"use strict";function CacheRoutingConfig($stateProvider){$stateProvider.state("index.webApp.cache",{url:"/cache/purge",views:{main:{controller:"CachePurgeController",templateUrl:"parts/cache/purge.html"}}}).state("index.webApp.advanced",{url:"/cache/advanced",views:{main:{controller:"CachePurgeController",templateUrl:"parts/cache/purge_advanced.html"}}})}angular.module("revapm.Portal.Cache").config(CacheRoutingConfig),CacheRoutingConfig.$inject=["$stateProvider"]}(),function(){"use strict";function CachePurgeController($scope,Cache,DomainsConfig,AlertService,$timeout){$scope._loading=!1,$scope.domain,$scope.json={purges:[{url:{is_wildcard:!0,expression:"/images/*.png"}}]},$scope.text="",$scope.options={mode:"code",modes:["code","view"],error:function(err){alert(err.toString())}},$scope.purge=function(){if($scope.domain){var json=angular.copy($scope.json);json.domainName=$scope.domain.domain_name,$scope._loading=!0,Cache.purge({},json).$promise.then(function(data){AlertService.success("The request has been successfully submitted",5e3)})["catch"](function(){AlertService.danger("Oops something went wrong",5e3)})["finally"](function(){$scope._loading=!1})}},$scope.purgeText=function(){if($scope.text&&$scope.domain){var json={domainName:$scope.domain.domain_name,purges:[]},list=$scope.text.split("\n");list.forEach(function(val){json.purges.push({url:{is_wildcard:!0,expression:val}})}),$scope._loading=!0,Cache.purge({},json).$promise.then(function(data){console.log(data),AlertService.success("The request has been successfully submitted",5e3)})["catch"](function(){AlertService.danger("Oops something went wrong",5e3)})["finally"](function(){$scope._loading=!1})}}}angular.module("revapm.Portal.Cache").controller("CachePurgeController",CachePurgeController),CachePurgeController.$inject=["$scope","Cache","DomainsConfig","AlertService","$timeout"]}(),function(){"use strict";angular.module("revapm.Portal.Reports",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","chart.js"])}(),function(){"use strict";function ReportsRoutes($stateProvider){$stateProvider.state("index.reports.proxy",{url:"/reports/proxy",views:{main:{controller:"ReportsProxyTrafficController",templateUrl:"parts/reports/proxy.html"}}}).state("index.reports.topreports",{url:"/reports/topreports",views:{main:{controller:"TopReportsTrafficController",templateUrl:"parts/reports/top-reports.html"}}}).state("index.reports.top",{url:"/reports/top",views:{main:{controller:"TopObjectsController",templateUrl:"parts/reports/top.html"}}}).state("index.reports.heatmaps",{url:"/reports/heatmaps",views:{main:{controller:"TrafficHeatmapsController",templateUrl:"parts/reports/heatmaps.html"}}}).state("index.reports.lm_rtt_heatmaps",{url:"/reports/lm_rtt_heatmaps",views:{main:{controller:"LMRTTHeatmapsController",templateUrl:"parts/reports/lm-rtt-heatmaps.html"}}})}angular.module("revapm.Portal.Domains").config(ReportsRoutes),ReportsRoutes.$inject=["$stateProvider"]}(),function(){"use strict";function D3ChartHelper(){function createSvgElement(element){return element=element||"body",d3.select(element).append("svg")}return{createSvgElement:createSvgElement}}angular.module("revapm.Portal.Reports").factory("D3ChartHelper",D3ChartHelper)}(),function(){"use strict";function ChartColorService(){function getRandomRgbPart(){return Math.floor(256*Math.random())}function randomColors(amount){if(!amount)return[];for(var result=[];amount--;){var rgb=d3.rgb(getRandomRgbPart(),getRandomRgbPart(),getRandomRgbPart());result.push(rgb.toString())}return result}function randomScaleOrdinalRange(amount){return d3.scale.ordinal().range(randomColors(amount))}return{randomColors:randomColors,randomScaleOrdinalRange:randomScaleOrdinalRange}}angular.module("revapm.Portal.Reports").factory("ChartColorService",ChartColorService)}(),function(){"use strict";function PieChartHelper(ChartColorService,D3ChartHelper){function drawPieChart(element,data,config){function change(data){function midAngle(d){return d.startAngle+(d.endAngle-d.startAngle)/2}var slice=svg.select(".slices").selectAll("path.slice").data(pie(data),key);slice.enter().insert("path").style("fill",function(d){return color(d.data.label)}).attr("class","slice"),slice.transition().duration(1e3).attrTween("d",function(d){this._current=this._current||d;var interpolate=d3.interpolate(this._current,d);return this._current=interpolate(0),function(t){return arc(interpolate(t))}}),slice.exit().remove();var text=svg.select(".labels").selectAll("text").data(pie(data),key);text.enter().append("text").attr("dy",".35em").text(function(d){return d.data.label}),text.transition().duration(1e3).attrTween("transform",function(d){this._current=this._current||d;var interpolate=d3.interpolate(this._current,d);return this._current=interpolate(0),function(t){var d2=interpolate(t),pos=outerArc.centroid(d2);return pos[0]=radius*(midAngle(d2)<Math.PI?1:-1),"translate("+pos+")"}}).styleTween("text-anchor",function(d){this._current=this._current||d;var interpolate=d3.interpolate(this._current,d);return this._current=interpolate(0),function(t){var d2=interpolate(t);return midAngle(d2)<Math.PI?"start":"end"}}),text.exit().remove();var polyline=svg.select(".lines").selectAll("polyline").data(pie(data),key);polyline.enter().append("polyline"),polyline.transition().duration(1e3).attrTween("points",function(d){this._current=this._current||d;var interpolate=d3.interpolate(this._current,d);return this._current=interpolate(0),function(t){var d2=interpolate(t),pos=outerArc.centroid(d2);return pos[0]=.95*radius*(midAngle(d2)<Math.PI?1:-1),[arc.centroid(d2),outerArc.centroid(d2),pos]}}),polyline.exit().remove()}angular.isArray(element)&&(data=element,element="body"),data=data||[];var width=$(element).width()||400,height=$(element).height()||200,radius=Math.min(width,height)/2,svg=D3ChartHelper.createSvgElement(element).attr("width",width).attr("height",height).append("g"),pie=d3.layout.pie().sort(null).value(function(d){return d.value}),key=function(d){return d.data.label};svg.append("g").attr("class","slices"),svg.append("g").attr("class","labels"),svg.append("g").attr("class","lines");var arc=d3.svg.arc().outerRadius(.8*radius).innerRadius(.05*radius),outerArc=d3.svg.arc().innerRadius(.9*radius).outerRadius(.9*radius);svg.attr("transform","translate("+width/2+","+height/2+")");var color=d3.scale.category20();return change(data),change}return{drawPieChart:drawPieChart}}angular.module("revapm.Portal.Reports").factory("PieChartHelper",PieChartHelper),PieChartHelper.$inject=["ChartColorService","D3ChartHelper"]}(),function(){"use strict";function filterTimePeriods(){return{restrict:"AE",templateUrl:"parts/reports/filters/time-period.html",scope:{ngFilters:"=",onFilter:"&",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope",function($scope){$scope.delay="1",$scope.updateFilters=function(){$scope.ngFilters||($scope.ngFilters={}),$scope.ngFilters.from_timestamp=moment(Date.now()).subtract(parseInt($scope.delay),"days").valueOf(),$scope.ngFilters.to_timestamp=Date.now(),$scope.onFilter()}}]}}angular.module("revapm.Portal.Reports").directive("filterTimePeriods",filterTimePeriods)}(),function(){"use strict";function filterTopObjects(){return{restrict:"AE",templateUrl:"parts/reports/filters/top-objects-filter.html",scope:{ngFilters:"=",onFilter:"&",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope",function($scope){$scope.delay="1",$scope.ngFilters||($scope.ngFilters={}),$scope.ngFilters.count="20",$scope.updateFilters=function(){$scope.ngFilters.from_timestamp=moment(Date.now()).subtract(parseInt($scope.delay),"hours").valueOf(),$scope.ngFilters.to_timestamp=Date.now(),$scope.onFilter()}}]}}angular.module("revapm.Portal.Reports").directive("filterTopObjects",filterTopObjects)}(),function(){"use strict";function pieChartDirective(){function link($scope,element,attrs){var el=element[0],chart=new Highcharts.Chart({chart:{renderTo:el,plotBackgroundColor:null,plotBorderWidth:null,plotShadow:!1,type:"pie"},title:{text:""},tooltip:{formatter:function(){return"<b>"+this.point.name+": </b>"+Highcharts.numberFormat(this.point.percentage,0)+"% ("+Highcharts.numberFormat(this.y,0,".",",")+" requests)"}},plotOptions:{pie:{allowPointSelect:!0,cursor:"pointer",dataLabels:{enabled:!0,format:"<b>{point.name}</b>: {point.percentage:.1f} %",style:{color:Highcharts.theme&&Highcharts.theme.contrastTextColor||"black"}}}},series:[{data:[]}]});$scope.$watch("ngData",function(value){value&&_.isArray(value)&&chart.series[0].setData(value)})}return{scope:{ngData:"="},link:link}}angular.module("revapm.Portal.Reports").directive("pieChart",pieChartDirective)}(),function(){"use strict";function lineChartDirective(){function link($scope,element,attrs){var el=element[0],chartOptions={chart:{renderTo:el},title:{text:""},xAxis:{categories:[],tickInterval:4},yAxis:{title:{text:"RPS"},plotLines:[{value:0,width:1,color:"#808080"}]},legend:{borderWidth:0},series:[]},chart=new Highcharts.Chart(angular.merge(chartOptions,$scope.ngChartOptions||{}));$scope.reload=function(){chart.redraw()},$scope.clearChart=function(){chart.series.forEach(function(series){series.remove()}),$scope.reload()},$scope.$watch("ngData",function(value){if(value&&_.isObject(value)){if($scope.clearChart(),_.isArray(value.labels)){if(0==value.labels.length)return;chart.xAxis[0].setCategories(value.labels)}if(_.isArray(value.series)){if(0==value.series.length)return;value.series.forEach(function(val){chart.addSeries(val)})}$scope.reload()}}),$scope.$watch("xAxis",function(value){return value&&_.isArray(value)?0==value.length?void $scope.clearChart():void chart.xAxis[0].update(value):void 0})}return{scope:{ngChartOptions:"=",ngData:"="},link:link}}angular.module("revapm.Portal.Reports").directive("lineChart",lineChartDirective)}(),function(){"use strict";function d3PieChart(PieChartHelper){return{restrict:"AE",template:"<div></div>",scope:{ngData:"="},link:function(scope,element,attrs){scope.ngData||(scope.ngData=[]);var redraw=PieChartHelper.drawPieChart(element[0],[]);scope.$watch("ngData",function(){return scope.ngData&&0!=scope.ngData.length?void redraw(scope.ngData):void redraw([])})}}}angular.module("revapm.Portal.Reports").directive("d3PieChart",d3PieChart),d3PieChart.$inject=["PieChartHelper"]}(),function(){"use strict";function requestsChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/requests.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.delay=1800,$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.chartOptions={yAxis:{title:{text:"Bandwidth"},labels:{formatter:function(){return Util.convertTraffic(this.value)}}},tooltip:{formatter:function(){return"<b>"+this.x+"</b><br/>"+this.series.name+": "+Util.convertTraffic(this.y)}}},$scope.traffic={labels:[],series:[{name:"Incoming bandwidth",data:[]},{name:"Outgoing bandwidth",data:[]}]},$scope.reloadTrafficStats=function(){$scope.ngDomain&&$scope.ngDomain.id&&($scope._loading=!0,$scope.traffic={labels:[],series:[{name:"Incoming bandwidth",data:[]},{name:"Outgoing bandwidth",data:[]}]},Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},$scope.filters)).$promise.then(function(data){if(data.data&&data.data.length>0){var series=[{name:"Incoming bandwidth",data:[]},{name:"Outgoing bandwidth",data:[]}],labels=[];$scope.delay=data.metadata.interval_sec||1800,angular.forEach(data.data,function(data){labels.push(moment(data.time).format("MMM Do YY h:mm")),series[0].data.push(Util.toBps(data.received_bytes,$scope.delay,!0)),series[1].data.push(Util.toBps(data.sent_bytes,$scope.delay,!0))}),$scope.traffic={labels:labels,series:series}}})["finally"](function(){$scope._loading=!1}))},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reloadTrafficStats()})}]}}angular.module("revapm.Portal.Reports").directive("requestsChart",requestsChartDirective)}(),function(){"use strict";function histCacheChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/hits-cache.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats","$q","Util",function($scope,Stats,$q,Util){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.delay=1800,$scope.traffic={labels:[],series:[{name:"Cache Hit",data:[]},{name:"Cache Miss",data:[]}]},$scope.loadHit=function(){return Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},$scope.filters,{cache_code:"HIT"})).$promise},$scope.loadMiss=function(){return Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},$scope.filters,{cache_code:"MISS"})).$promise},$scope.reload=function(){$scope.ngDomain&&$scope.ngDomain.id&&($scope._loading=!0,$scope.traffic={labels:[],series:[{name:"Cache Hit",data:[]},{name:"Cache Miss",data:[]}]},$q.all([$scope.loadHit(),$scope.loadMiss()]).then(function(data){$scope.delay=data[0].metadata.interval_sec||1800;var labels=[],series=[{name:"Cache Hit",data:[]},{name:"Cache Miss",data:[]}];data[0].data&&data[0].data.length>0&&angular.forEach(data[0].data,function(data){labels.push(moment(data.time).format("MMM Do YY h:mm")),series[0].data.push(Util.toRPS(data.requests,$scope.delay,!0))}),data[1].data&&data[1].data.length>0&&angular.forEach(data[1].data,function(data){series[1].data.push(Util.toRPS(data.requests,$scope.delay,!0))}),$scope.traffic={labels:labels,series:series}})["finally"](function(){$scope._loading=!1}))},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("hitsCacheChart",histCacheChartDirective)}(),function(){"use strict";function httpStatusCodeChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/http-status-code.html",scope:{ngDomain:"=",statusCodes:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats","$q","Util",function($scope,Stats,$q,Util){$scope._loading=!1,$scope.delay=1800,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),
to_timestamp:Date.now()},$scope.traffic={labels:[],series:[]},$scope.reload=function(){if($scope.ngDomain&&$scope.ngDomain.id&&$scope.statusCodes&&$scope.statusCodes.length){$scope.traffic={labels:[],series:[]};var promises={},series=[],labels=[];$scope.statusCodes.forEach(function(code){code&&(promises[code]=Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},$scope.filters,{status_code:code})).$promise)}),$scope._loading=!0;var timeSet=!1;$q.all(promises).then(function(data){labels=[],$scope.delay=1800,angular.forEach(data,function(val,idx){var results=[];data[idx].metadata.interval_sec&&($scope.delay=data[idx].metadata.interval_sec),data[idx].data&&data[idx].data.length>0&&(angular.forEach(data[idx].data,function(res){timeSet||labels.push(moment(res.time).format("MMM Do YY h:mm")),results.push(Util.toRPS(res.requests,$scope.delay,!0))}),timeSet=!0),series.push({name:idx,data:results})}),$scope.traffic={labels:labels,series:series}})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.reload()}),$scope.$watch("statusCodes",function(){$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("httpStatusCodeChart",httpStatusCodeChartDirective)}(),function(){"use strict";function httpHttpsChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/http-https.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats","$q","Util",function($scope,Stats,$q,Util){$scope._loading=!1,$scope.delay=1800,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.traffic={labels:[],series:[{name:"HTTP",data:[]},{name:"HTTPS",data:[]}]},$scope.loadHttp=function(){return Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},$scope.filters,{protocol:"HTTP"})).$promise},$scope.loadHttps=function(){return Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},$scope.filters,{protocol:"HTTPS"})).$promise},$scope.reload=function(){$scope.ngDomain&&$scope.ngDomain.id&&($scope._loading=!0,$scope.traffic={labels:[],series:[{name:"HTTP",data:[]},{name:"HTTPS",data:[]}]},$q.all([$scope.loadHttp(),$scope.loadHttps()]).then(function(data){$scope.delay=data[0].metadata.interval_sec||1800;var labels=[],series=[{name:"HTTP",data:[]},{name:"HTTPS",data:[]}];data[0].data&&data[0].data.length>0&&angular.forEach(data[0].data,function(data){labels.push(moment(data.time).format("MMM Do YY h:mm")),series[0].data.push(Util.toRPS(data.requests,$scope.delay,!0))}),data[1].data&&data[1].data.length>0&&angular.forEach(data[1].data,function(data){series[1].data.push(Util.toRPS(data.requests,$scope.delay,!0))}),$scope.traffic={labels:labels,series:series}})["finally"](function(){$scope._loading=!1}))},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("httpHttpsChart",httpHttpsChartDirective)}(),function(){"use strict";function requestStatusChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/request-status.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats","$q","Util",function($scope,Stats,$q,Util){$scope._loading=!1,$scope.delay=1800,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.traffic={labels:[],series:[{name:"Successful",data:[]},{name:"Failed",data:[]}]},$scope.loadOk=function(){return Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},$scope.filters,{request_status:"OK"})).$promise},$scope.loadError=function(){return Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},$scope.filters,{request_status:"ERROR"})).$promise},$scope.reload=function(){$scope.ngDomain&&$scope.ngDomain.id&&($scope._loading=!0,$scope.traffic={labels:[],series:[{name:"Successful",data:[]},{name:"Failed",data:[]}]},$q.all([$scope.loadOk(),$scope.loadError()]).then(function(data){$scope.delay=data[0].metadata.interval_sec||1800;var labels=[],series=[{name:"Successful",data:[]},{name:"Failed",data:[]}];data[0].data&&data[0].data.length>0&&angular.forEach(data[0].data,function(data){labels.push(moment(data.time).format("MMM Do YY h:mm")),series[0].data.push(Util.toRPS(data.requests,$scope.delay,!0))}),data[1].data&&data[1].data.length>0&&angular.forEach(data[1].data,function(data){series[1].data.push(Util.toRPS(data.requests,$scope.delay,!0))}),$scope.traffic={labels:labels,series:series}})["finally"](function(){$scope._loading=!1}))},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reload()})}]}}angular.module("revapm.Portal.Reports").directive("requestStatusChart",requestStatusChartDirective)}(),function(){"use strict";function proxyTrafficChartDirective(){return{restrict:"AE",templateUrl:"parts/reports/charts/proxy-traffic.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats","Util",function($scope,Stats,Util){$scope.delay=1800,$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.traffic={labels:[],series:[{name:"Total",data:[]}]},$scope.reloadTrafficStats=function(){$scope.ngDomain&&$scope.ngDomain.id&&($scope._loading=!0,$scope.traffic={labels:[],series:[{name:"Total",data:[]}]},Stats.traffic(angular.merge({domainId:$scope.ngDomain.id},$scope.filters)).$promise.then(function(data){if(data.data&&data.data.length>0){$scope.delay=data.metadata.interval_sec||1800;var series=[{name:"Total",data:[]}],labels=[];angular.forEach(data.data,function(data){labels.push(moment(data.time).format("MMM Do YY h:mm")),series[0].data.push(Util.toRPS(data.requests,$scope.delay,!0))}),$scope.traffic={labels:labels,series:series}}})["finally"](function(){$scope._loading=!1}))},$scope.$watch("ngDomain",function(){$scope.ngDomain&&$scope.reloadTrafficStats()})}]}}angular.module("revapm.Portal.Reports").directive("proxyTrafficChart",proxyTrafficChartDirective)}(),function(){"use strict";function topRequestsDirective(){return{restrict:"AE",templateUrl:"parts/reports/top/top-requests.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats",function($scope,Stats){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"hours").valueOf(),to_timestamp:Date.now()},$scope.items=[],$scope.data={labels:[],data:[[]]},$scope.loadDetails=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0,$scope.data={labels:[],data:[[]]};var params=angular.merge({domainId:$scope.ngDomain.id},$scope.filters);Stats.topObjects(params).$promise.then(function(res){$scope.items=res.data,res.data.map(function(val){$scope.data.labels.push(val.path),$scope.data.data[0].push(val.count)})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.loadDetails()})}]}}angular.module("revapm.Portal.Reports").directive("topRequests",topRequestsDirective)}(),function(){"use strict";function topCacheMissDirective(){return{restrict:"AE",templateUrl:"parts/reports/top/top-cache-miss.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats",function($scope,Stats){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"hours").valueOf(),to_timestamp:Date.now(),cache_code:"MISS"},$scope.items=[],$scope.data={labels:[],data:[[]]},$scope.loadDetails=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0,$scope.data={labels:[],data:[[]]};var params=angular.merge({domainId:$scope.ngDomain.id},$scope.filters);Stats.topObjects(params).$promise.then(function(res){$scope.items=res.data,res.data.map(function(val){$scope.data.labels.push(val.path),$scope.data.data[0].push(val.count)})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.loadDetails()})}]}}angular.module("revapm.Portal.Reports").directive("topCacheMiss",topCacheMissDirective)}(),function(){"use strict";function top404Directive(){return{restrict:"AE",templateUrl:"parts/reports/top/top-404.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats",function($scope,Stats){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"hours").valueOf(),to_timestamp:Date.now(),status_code:404},$scope.items=[],$scope.data={labels:[],data:[[]]},$scope.loadDetails=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0,$scope.data={labels:[],data:[[]]};var params=angular.merge({domainId:$scope.ngDomain.id},$scope.filters);Stats.topObjects(params).$promise.then(function(res){$scope.items=res.data,res.data.map(function(val){$scope.data.labels.push(val.path),$scope.data.data[0].push(val.count)})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.loadDetails()})}]}}angular.module("revapm.Portal.Reports").directive("top404",top404Directive)}(),function(){"use strict";function topRefererDirective(){return{restrict:"AE",templateUrl:"parts/reports/top/top-referer.html",scope:{ngDomain:"=",flCountry:"=",flOs:"=",flDevice:"="},controller:["$scope","Stats",function($scope,Stats){$scope._loading=!1,$scope.filters={from_timestamp:moment().subtract(1,"hours").valueOf(),to_timestamp:Date.now()},$scope.items=[],$scope.data={labels:[],data:[[]]},$scope.loadDetails=function(){if($scope.ngDomain&&$scope.ngDomain.id){$scope._loading=!0,$scope.data={labels:[],data:[[]]};var params=angular.merge({domainId:$scope.ngDomain.id},$scope.filters);Stats.referer(params).$promise.then(function(res){$scope.items=res.data,res.data.map(function(val){$scope.data.labels.push(val.key),$scope.data.data[0].push(val.count)})})["finally"](function(){$scope._loading=!1})}},$scope.$watch("ngDomain",function(){$scope.loadDetails()})}]}}angular.module("revapm.Portal.Reports").directive("topReferer",topRefererDirective)}(),function(){"use strict";angular.module("revapm.Portal.Reports").constant("HeatmapsConfig",{COLOR_COUNTS:20,COLORS:{FIRST:"#99ccff",LAST:"#0050A1",ZERO:"#ccc"}})}(),function(){"use strict";function HeatmapsDrawer(HeatmapsConfig){function Interpolate(start,end,steps,count){var s=start,e=end,final=s+(e-s)/steps*count;return Math.floor(final)}function Color(_r,_g,_b){var r,g,b,setColors=function(_r,_g,_b){r=_r,g=_g,b=_b};setColors(_r,_g,_b),this.getColors=function(){var colors={r:r,g:g,b:b};return colors}}function hexToRgb(hex){var result=/^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);return result?{r:parseInt(result[1],16),g:parseInt(result[2],16),b:parseInt(result[3],16)}:null}function valueFormat(d,force){return d>1e9||"G"===force?Math.round(d/1e7)/100+"G":d>1e6||"M"===force?Math.round(d/1e5)/10+"M":d>1e3||"K"===force?Math.round(d/100)/10+"K":d}function log10(val){return Math.log(val)}function drawMap(canvasSvgId,tooltipId,data){var width=$(canvasSvgId).width(),height=width/1.5,COLOR_COUNTS=this.conf.COLOR_COUNTS,COLOR_FIRST=this.conf.COLORS.FIRST,COLOR_LAST=this.conf.COLORS.LAST,COLOR_ZERO=this.conf.COLORS.ZERO,rgb=hexToRgb(COLOR_FIRST),COLOR_START=new Color(rgb.r,rgb.g,rgb.b);rgb=hexToRgb(COLOR_LAST);for(var COLOR_END=new Color(rgb.r,rgb.g,rgb.b),startColors=COLOR_START.getColors(),endColors=COLOR_END.getColors(),colors=[],i=0;COLOR_COUNTS>i;i++){var r=Interpolate(startColors.r,endColors.r,COLOR_COUNTS,i),g=Interpolate(startColors.g,endColors.g,COLOR_COUNTS,i),b=Interpolate(startColors.b,endColors.b,COLOR_COUNTS,i);colors.push(new Color(r,g,b))}var projection=d3.geo.mercator().scale((width+1)/2/Math.PI).translate([width/2,height/1.4]).precision(.1),path=d3.geo.path().projection(projection),graticule=d3.geo.graticule();clearMap(canvasSvgId);var svg=d3.select(canvasSvgId).append("svg").attr("width","100%").attr("height",height);svg.append("path").datum(graticule).attr("class","graticule").attr("d",path);var valueHash=_.mapValues(data,function(item){return item.value}),quantize=d3.scale.quantize().domain([0,1]).range(d3.range(COLOR_COUNTS).map(function(i){return i})),values=d3.values(valueHash);quantize.domain([d3.min(values,function(d){return+d}),d3.max(values,function(d){return+d})]),d3.json("js/heatmaps/world-topo-min.json",function(error,world){var countries=topojson.feature(world,world.objects.countries).features;svg.append("path").datum(graticule).attr("class","choropleth").attr("d",path);var g=svg.append("g");g.append("path").datum({type:"LineString",coordinates:[[-180,0],[-90,0],[0,0],[90,0],[180,0]]}).attr("class","equator").attr("d",path);var country=g.selectAll(".country").data(countries);country.enter().insert("path").attr("class","country").attr("d",path).attr("id",function(d,i){return d.id}).attr("title",function(d){return d.properties.name}).style("fill",function(d){if(valueHash[d.properties.name]){var c=quantize(valueHash[d.properties.name]),color=colors[c].getColors();return"rgb("+color.r+","+color.g+","+color.b+")"}return COLOR_ZERO}).on("mousemove",function(d){var html="";html+='<div class="tooltip_kv">',html+='<span class="tooltip_key">',html+=d.properties.name,html+="</span>",html+='<span class="tooltip_value">',html+=data[d.properties.name]&&data[d.properties.name].tooltip?data[d.properties.name].tooltip:"--",html+="</span>",html+="</div>",$(tooltipId).html(html),$(this).attr("fill-opacity","0.8"),$(tooltipId).show();var map_width=(d3.mouse(this),$(".choropleth")[0].getBoundingClientRect().width);if(d3.event.pageX<map_width/2)d3.select(tooltipId).style("top",d3.event.layerY+15+"px").style("left",d3.event.layerX+15+"px");else{var tooltip_width=$(tooltipId).width();d3.select(tooltipId).style("top",d3.event.layerY+15+"px").style("left",d3.event.layerX-tooltip_width-30+"px")}}).on("mouseout",function(){$(this).attr("fill-opacity","1.0"),$(tooltipId).hide()}),g.append("path").datum(topojson.mesh(world,world.objects.countries,function(a,b){return a!==b})).attr("class","boundary").attr("d",path)})}function clearMap(canvasSvgId){canvasSvgId=canvasSvgId?canvasSvgId+" svg":"svg",d3.select(canvasSvgId)&&d3.select(canvasSvgId).remove()}return{conf:HeatmapsConfig,clearMap:clearMap,drawMap:drawMap,Interpolate:Interpolate,Color:Color,hexToRgb:hexToRgb,valueFormat:valueFormat,log10:log10}}angular.module("revapm.Portal.Domains").factory("HeatmapsDrawer",HeatmapsDrawer),HeatmapsDrawer.$inject=["HeatmapsConfig"]}(),function(){"use strict";function ReportsProxyTrafficController($scope,$rootScope,User,AlertService,Stats,Countries){$scope.userService=User,$scope._loading=!0,$scope.domain=$rootScope.domain,$scope.domains=[],$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.pieOpts={scaleOverride:!0},$scope.os={labels:[],data:[]},$scope.device={labels:[],data:[]},$scope.country={labels:[],data:[]},$scope.statusCode={labels:[],data:[]},$scope.countries=Countries.query(),$scope.reloadOS=function(domainId){$scope.os={labels:[],data:[]},Stats.os({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.os.labels.push(os.key),$scope.os.data.push(os.count)})})},$scope.reloadDevice=function(domainId){$scope.device={labels:[],data:[]},Stats.device({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.device.labels.push(os.key),$scope.device.data.push(os.count)})})},$scope.reloadProtocol=function(domainId){$scope.protocol={labels:[],data:[]},Stats.protocol({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){var protocol="Unknows";80==os.key&&(protocol="HTTP"),443==os.key&&(protocol="HTTPS"),$scope.protocol.labels.push(protocol),$scope.protocol.data.push(os.count)})})},$scope.reloadHttpMethod=function(domainId){$scope.httpMethod={labels:[],data:[]},Stats.httpMethod({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.httpMethod.labels.push(os.key),$scope.httpMethod.data.push(os.count)})})},$scope.reloadHttpProtocol=function(domainId){$scope.httpProtocol={labels:[],data:[]},Stats.httpProtocol({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.httpProtocol.labels.push(os.key),$scope.httpProtocol.data.push(os.count)})})},$scope.reloadStatusCode=function(domainId){$scope.statusCode={labels:[],data:[]},Stats.statusCode({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&($scope.statusCode={labels:[],data:[]},angular.forEach(data.data,function(os){$scope.statusCode.labels.push(os.key),$scope.statusCode.data.push(os.count)}))})},$scope.reloadContentType=function(domainId){$scope.contentType={labels:[],data:[]},Stats.contentType({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.contentType.labels.push(os.key),$scope.contentType.data.push(os.count)})})},$scope.reloadCacheStatus=function(domainId){$scope.cacheStatus={labels:[],data:[]},Stats.cacheStatus({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.cacheStatus.labels.push(os.key),$scope.cacheStatus.data.push(os.count)})})},$scope.reloadCountry=function(domainId){$scope.country={labels:[],data:[]},Stats.country({domainId:domainId}).$promise.then(function(data){data.data&&data.data.length>0&&angular.forEach(data.data,function(os){$scope.country.labels.push(os.key),$scope.country.data.push(os.count)})})},$scope.reload=function(){$scope.reloadOS($scope.domain.id),$scope.reloadDevice($scope.domain.id),$scope.reloadCountry($scope.domain.id),$scope.reloadStatusCode($scope.domain.id)},User.getUserDomains(!0).then(function(domains){$scope.domains=domains})["catch"](function(){AlertService.danger("Oops something wrong")})["finally"](function(){$scope._loading=!1}),$scope.onDomainSelected=function(){$scope.domain&&$scope.domain.id&&$scope.reload()}}angular.module("revapm.Portal.Reports").controller("ReportsProxyTrafficController",ReportsProxyTrafficController),ReportsProxyTrafficController.$inject=["$scope","$rootScope","User","AlertService","Stats","Countries"]}(),function(){"use strict";function TopReportsTrafficController($scope,User,AlertService,Stats,Countries){$scope.userService=User,$scope._loading=!0,$scope.domain=null,$scope.domains=[],$scope.filters={from_timestamp:moment().subtract(1,"days").valueOf(),to_timestamp:Date.now()},$scope.pieOpts={scaleOverride:!0},$scope.os=[],$scope.device=[],$scope.country=[],$scope.statusCode=[],$scope.countries=Countries.query(),$scope.reloadOS=function(domainId){$scope.os=[],Stats.os({domainId:domainId}).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.os=newData}})},$scope.reloadDevice=function(domainId){$scope.device=[],Stats.device({domainId:domainId}).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.device=newData}})},$scope.reloadProtocol=function(domainId){$scope.protocol=[],Stats.protocol({domainId:domainId}).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){var protocol="Unknows";80==val.key&&(protocol="HTTP"),443==val.key&&(protocol="HTTPS"),newData.push({name:protocol,y:val.count})}),$scope.protocol=newData}})},$scope.reloadHttpMethod=function(domainId){$scope.httpMethod=[],Stats.httpMethod({domainId:domainId}).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.httpMethod=newData}})},$scope.reloadHttpProtocol=function(domainId){$scope.httpProtocol=[],Stats.httpProtocol({domainId:domainId}).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.httpProtocol=newData}})},$scope.reloadStatusCode=function(domainId){$scope.statusCode=[],Stats.statusCode({domainId:domainId}).$promise.then(function(data){var newData=[];data.data&&data.data.length>0&&(angular.forEach(data.data,function(os){newData.push({name:os.key,y:os.count})}),$scope.statusCode=newData)})},$scope.reloadContentType=function(domainId){$scope.contentType=[],Stats.contentType({domainId:domainId}).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.contentType=newData}})},$scope.reloadCacheStatus=function(domainId){$scope.cacheStatus=[],Stats.cacheStatus({domainId:domainId}).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:val.key,y:val.count})}),$scope.cacheStatus=newData}})},$scope.reloadQUIC=function(domainId){$scope.quic=[],Stats.quic({domainId:domainId}).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){newData.push({name:"-"===val.key?"Non-QUIC":val.key,y:val.count})}),$scope.quic=newData}})},$scope.reloadCountry=function(domainId){$scope.country=[],Stats.country({domainId:domainId}).$promise.then(function(data){if(data.data&&data.data.length>0){var newData=[];angular.forEach(data.data,function(val){var name=$scope.countries[val.key.toUpperCase()]||val.key;newData.push({name:name,y:val.count})}),$scope.country=newData}})},$scope.reload=function(){$scope.reloadOS($scope.domain.id),$scope.reloadDevice($scope.domain.id),$scope.reloadCountry($scope.domain.id),$scope.reloadProtocol($scope.domain.id),$scope.reloadHttpMethod($scope.domain.id),$scope.reloadHttpProtocol($scope.domain.id),$scope.reloadStatusCode($scope.domain.id),$scope.reloadContentType($scope.domain.id),$scope.reloadCacheStatus($scope.domain.id),$scope.reloadQUIC($scope.domain.id)},User.getUserDomains(!0).then(function(domains){$scope.domains=domains})["catch"](function(){AlertService.danger("Oops something wrong")})["finally"](function(){$scope._loading=!1}),$scope.onDomainSelected=function(domain){$scope.domain&&$scope.domain.id&&$scope.reload()}}angular.module("revapm.Portal.Reports").controller("TopReportsTrafficController",TopReportsTrafficController),TopReportsTrafficController.$inject=["$scope","User","AlertService","Stats","Countries"]}(),function(){"use strict";function TopObjectsController($scope,User,AlertService,Stats,Countries,$q){$scope._loading=!0,$scope.domain=null,$scope.domains=[],$scope.countries=Countries.query(),$scope.os=[],$scope.devices=[],$scope.reload=function(){if($scope.domain&&$scope.domain.id){$scope.os=[],$scope.devices=[];var promises=[Stats.os({domainId:$scope.domain.id}).$promise,Stats.device({domainId:$scope.domain.id}).$promise];$q.all(promises).then(function(data){data&&data[0]&&data[1]&&data[0].data&&data[1].data&&(data[0].data.map(function(os){$scope.os.push(os.key)}),data[1].data.map(function(device){$scope.devices.push(device.key)}))})}},User.getUserDomains(!0).then(function(domains){$scope.domains=domains})["catch"](function(){AlertService.danger("Oops something wrong")})["finally"](function(){$scope._loading=!1}),$scope.onDomainSelected=function(){$scope.reload()}}angular.module("revapm.Portal.Reports").controller("TopObjectsController",TopObjectsController),TopObjectsController.$inject=["$scope","User","AlertService","Stats","Countries","$q"]}(),function(){"use strict";function TrafficHeatmapsController($scope,HeatmapsDrawer,Countries,Stats,$q){$scope._loading=!1,$scope.domain=null,$scope.delay="6",$scope.countryHitsData={},$scope.countryGBTData={},$scope.countries=Countries.query(),$scope.reloadHitsCountry=function(domainId){return HeatmapsDrawer.clearMap("#canvas-svg-hits"),$scope._loading=!0,$scope.countryHitsData={},Stats.country({domainId:domainId,count:250,from_timestamp:moment().subtract($scope.delay||6,"hours").valueOf(),to_timestamp:Date.now()}).$promise.then(function(data){return data.data&&data.data.length>0&&angular.forEach(data.data,function(item){var name=$scope.countries[item.key.toUpperCase()]||item.key;$scope.countryHitsData[name]={value:item.count,tooltip:"<strong>"+HeatmapsDrawer.valueFormat(item.count)+"</strong> requests"}}),data})},$scope.reloadGBTCountry=function(domainId){return HeatmapsDrawer.clearMap("#canvas-svg-gbt"),$scope._loading=!0,$scope.countryGBTData={},Stats.gbt_country({domainId:domainId,count:250,from_timestamp:moment().subtract($scope.delay||6,"hours").valueOf(),to_timestamp:Date.now()}).$promise.then(function(data){return data.data&&data.data.length>0&&angular.forEach(data.data,function(item){var name=$scope.countries[item.key.toUpperCase()]||item.key;$scope.countryGBTData[name]={value:item.sent_bytes,tooltip:"Sent: <strong>"+HeatmapsDrawer.valueFormat(item.sent_bytes,"G")+"B</strong> Received: <strong>"+HeatmapsDrawer.valueFormat(item.received_bytes,"G")+"B</strong>"}}),data})},$scope.onDomainSelect=function(){$scope.domain&&$scope.domain.id&&$q.all([$scope.reloadHitsCountry($scope.domain.id),$scope.reloadGBTCountry($scope.domain.id)]).then(function(){HeatmapsDrawer.drawMap("#canvas-svg-hits","#tooltip-container-hits",$scope.countryHitsData),HeatmapsDrawer.drawMap("#canvas-svg-gbt","#tooltip-container-gbt",$scope.countryGBTData)})["finally"](function(){$scope._loading=!1})},HeatmapsDrawer.drawMap("#canvas-svg-hits","#tooltip-container-hits",{}),HeatmapsDrawer.drawMap("#canvas-svg-gbt","#tooltip-container-gbt",{})}angular.module("revapm.Portal.Reports").controller("TrafficHeatmapsController",TrafficHeatmapsController),TrafficHeatmapsController.$inject=["$scope","HeatmapsDrawer","Countries","Stats","$q"]}(),function(){"use strict";function LMRTTHeatmapsController($scope,HeatmapsDrawer,Countries,Stats){$scope._loading=!1,$scope.domain=null,$scope.delay="6",$scope.countryLMRTTData={},$scope.countries=Countries.query(),$scope.reloadCountry=function(domainId){return HeatmapsDrawer.clearMap(),$scope._loading=!0,$scope.countryLMRTTData={},console.log($scope.delay),Stats.lm_rtt_country({domainId:domainId,count:250,from_timestamp:moment().subtract($scope.delay||6,"hours").valueOf(),to_timestamp:Date.now()}).$promise.then(function(data){return data.data&&data.data.length>0&&angular.forEach(data.data,function(item){var name=$scope.countries[item.key.toUpperCase()]||item.key;$scope.countryLMRTTData[name]={value:item.lm_rtt_avg_ms,tooltip:"Avg: <strong>"+item.lm_rtt_avg_ms+"</strong> Min: <strong>"+item.lm_rtt_min_ms+"</strong> Max: <strong>"+item.lm_rtt_max_ms+"</strong> ms"}}),data})["finally"](function(){$scope._loading=!1})},$scope.onDomainSelect=function(){$scope.domain&&$scope.domain.id&&$scope.reloadCountry($scope.domain.id).then(function(){HeatmapsDrawer.drawMap("#canvas-svg","#tooltip-container",$scope.countryLMRTTData)})},HeatmapsDrawer.drawMap("#canvas-svg","#tooltip-container",{})}angular.module("revapm.Portal.Reports").controller("LMRTTHeatmapsController",LMRTTHeatmapsController),LMRTTHeatmapsController.$inject=["$scope","HeatmapsDrawer","Countries","Stats"]}(),function(){"use strict";angular.module("revapm.Portal.Keys",["revapm.Portal.Shared","revapm.Portal.Config","revapm.Portal.Resources","ui.router","ui.select"])}(),function(){"use strict";function routesConfig($stateProvider){$stateProvider.state("index.accountSettings.keys",{url:"/keys/list",views:{main:{controller:"KeysListController",templateUrl:"parts/keys/list.html"}}})}angular.module("revapm.Portal.Keys").config(routesConfig),routesConfig.$inject=["$stateProvider"]}(),function(){"use strict";function KeysListController($scope,CRUDController,ApiKeys,$injector,$stateParams,Companies,DomainsConfig,$state,$modal){function clearUpdateData(data){var fields=["key_name","account_id","domains","allowed_ops","read_only_status","active"];return _.pick(_.clone(data),fields)}return $injector.invoke(CRUDController,this,{$scope:$scope,$stateParams:$stateParams}),$scope.auth.isUser()?void $state.go("index.accountSettings.profile"):($scope.setState("index.accountSettings.keys"),$scope.setResource(ApiKeys),Companies.query().$promise.then(function(data){$scope.companies=data})["catch"](function(err){if(403==err.status){var user=$scope.auth.getUser();$scope.companies=[{id:user.companyId[0]}]}}),$scope.domains=DomainsConfig.query(),$scope.deleteKey=function(model){$scope.confirm("confirmModal.html",model).then(function(){$scope["delete"](model)})},$scope.createKey=function(account){return account&&account.id?($scope._loading=!0,$scope.alertService.clear(),ApiKeys.create({account_id:account.id}).$promise.then(function(data){return $scope.alertService.success("API Key created.",5e3),$scope.list(),data})["catch"](function(err){$scope.alertService.danger(err)})["finally"](function(){$scope._loading=!1})):void 0},$scope.openCreateDialog=function(){if($scope.alertService.clear(),$scope.companies&&1===$scope.companies.length)return $scope.createKey($scope.companies[0]);var modalInstance=$modal.open({animation:!0,templateUrl:"parts/keys/dialog/create.html",controller:"KeysCreateController",size:"md",resolve:{companies:function(){return $scope.companies}}});modalInstance.result.then($scope.createKey)},$scope.openUpdateDialogFor=function(keyId){$scope.alertService.clear();var modalInstance=$modal.open({animation:!0,templateUrl:"parts/keys/dialog/edit.html",controller:"KeysEditController",size:"md",resolve:{data:function(){return{companies:$scope.companies,domains:$scope.domains,keyId:keyId}}}});modalInstance.result.then(function(account){$scope.alertService.success("API Key updated.",5e3),$scope.list()})},$scope.toggleProperty=function(key,property){return key&&key.id&&!key.loading?(key[property]=!key[property],key.loading=!0,ApiKeys.update({id:key.id},clearUpdateData(key)).$promise.then(function(data){return data})["catch"](function(err){$scope.alertService.danger(err)})["finally"](function(){key.loading=!1})):void 0},void $scope.list())}angular.module("revapm.Portal.Keys").controller("KeysListController",KeysListController),KeysListController.$inject=["$scope","CRUDController","ApiKeys","$injector","$stateParams","Companies","DomainsConfig","$state","$modal"]}(),function(){"use strict";function KeysCreateController($scope,$modalInstance,companies){$scope.companies=companies,$scope.selected=null,$scope.onModelSelect=function(model){$scope.selected=model},$scope.ok=function(){$modalInstance.close($scope.selected)},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}angular.module("revapm.Portal.Keys").controller("KeysCreateController",KeysCreateController),KeysCreateController.$inject=["$scope","$modalInstance","companies"]}(),function(){"use strict";function KeysEditController($scope,$modalInstance,ApiKeys,AlertService,data){function clearUpdateData(data){var fields=["key_name","account_id","domains","allowed_ops","read_only_status","active"];return _.pick(_.clone(data),fields)}$scope._loading=!1,$scope.companies=data.companies,$scope.domains=data.domains,$scope.selected=null,$scope.key=null,$scope.selectedDomains=[],$scope.selectDomains=function(accountId){$scope.selectedDomains=[],accountId&&angular.forEach($scope.domains,function(domain){domain.account_id===accountId&&$scope.selectedDomains.push(domain)})},$scope.loadKeyDetails=function(id){id&&($scope._loading=!0,$scope.key=null,ApiKeys.get({id:id}).$promise.then(function(key){$scope.key=key})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1}))},$scope.onModelSelect=function(model){$scope.selected=model},$scope.ok=function(){$scope.key&&$scope.key.id&&($scope._loading=!0,ApiKeys.update({id:$scope.key.id},clearUpdateData($scope.key)).$promise.then(function(data){$modalInstance.close(data)})["catch"](function(err){AlertService.danger(err)})["finally"](function(){$scope._loading=!1}))},$scope.cancel=function(){$modalInstance.dismiss("cancel")},data.keyId&&$scope.loadKeyDetails(data.keyId),
$scope.$watch("key.account_id",function(account_id){$scope.selectDomains(account_id)})}angular.module("revapm.Portal.Keys").controller("KeysEditController",KeysEditController),KeysEditController.$inject=["$scope","$modalInstance","ApiKeys","AlertService","data"]}(),function(){"use strict";angular.module("revapm.Portal",["revapm.Portal.Auth","revapm.Portal.Profile","revapm.Portal.Users","revapm.Portal.Domains","revapm.Portal.Companies","revapm.Portal.Cache","revapm.Portal.Reports","revapm.Portal.Keys","ui.router","ui.bootstrap.tpls","ui.bootstrap.tooltip","ui.bootstrap.popover"])}(),function(){"use strict";function configure(){}angular.module("revapm.Portal").config(configure)}(),function(){"use strict";function routesConfig($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/users"),$stateProvider.state("index",{url:"",views:{layout:{templateUrl:"parts/layout.html",controller:["$scope","$state","User",function($scope,$state,User){$scope.userService=User,User.isAuthed()||"index.restore"==$state.current.name?"index"==$state.current.name&&$state.go("index.reports.proxy"):$state.go("login")}]}}}).state("index.webApp",{url:"",views:{menu:{controller:["$scope","$state",function($scope,$state){$scope.account="",$scope.webapp="",$scope.reports="",$scope.help="",$state.includes("index.webApp")&&($scope.webapp="active")}],templateUrl:"parts/cadmin-top-menu.html"},sideMenu:{templateUrl:"parts/menu/domains-side.html"},page:{controller:function(){},templateUrl:"parts/layout/page.html"}}}).state("index.accountSettings",{url:"",views:{menu:{controller:["$scope","$state",function($scope,$state){$scope.account="",$scope.webapp="",$scope.reports="",$scope.help="",$state.includes("index.accountSettings")&&($scope.account="active")}],templateUrl:"parts/cadmin-top-menu.html"},sideMenu:{templateUrl:"parts/menu/accounts-side.html"},page:{controller:function(){},templateUrl:"parts/layout/page.html"}}}).state("index.reports",{url:"",views:{menu:{controller:["$scope","$state",function($scope,$state){$scope.account="",$scope.webapp="",$scope.reports="",$scope.help="",$state.includes("index.reports")&&($scope.reports="active")}],templateUrl:"parts/cadmin-top-menu.html"},sideMenu:{templateUrl:"parts/menu/analitycs-side.html"},page:{controller:function(){},templateUrl:"parts/layout/page.html"}}}).state("index.help",{url:"/help",views:{menu:{controller:["$scope","$state",function($scope,$state){$scope.account="",$scope.webapp="",$scope.reports="",$scope.help="",$state.includes("index.help")&&($scope.help="active")}],templateUrl:"parts/cadmin-top-menu.html"},sideMenu:{templateUrl:"parts/menu/help-side.html"},page:{controller:function(){},templateUrl:"parts/help/contactus.html"}}})}angular.module("revapm.Portal").config(routesConfig),routesConfig.$inject=["$stateProvider","$urlRouterProvider"]}(),function(){"use strict";function runApp($rootScope,AlertService){$rootScope.$on("$stateChangeStart",function(event){AlertService.clear()})}angular.module("revapm.Portal").run(runApp),runApp.$inject=["$rootScope","AlertService"]}();