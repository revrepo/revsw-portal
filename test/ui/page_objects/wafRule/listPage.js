/*************************************************************************
 *
 * REV SOFTWARE CONFIDENTIAL
 *
 * [2013] - [2017] Rev Software, Inc.
 * All Rights Reserved.
 *
 * NOTICE:  All information contained herein is, and remains
 * the property of Rev Software, Inc. and its suppliers,
 * if any.  The intellectual and technical concepts contained
 * herein are proprietary to Rev Software, Inc.
 * and its suppliers and may be covered by U.S. and Foreign Patents,
 * patents in process, and are protected by trade secret or copyright law.
 * Dissemination of this information or reproduction of this material
 * is strictly forbidden unless prior written permission is obtained
 * from Rev Software, Inc.
 */

// # WAF Rule Page Object

// Requiring other Page Objects that compound the WAF Rule Page one
// var SSLCertTable = require('./table/table'); // TODO: add table
var Pager = require('./../common/pager');
var Searcher = require('./../common/searcher');

// This `WAF Rule` Page Object abstracts all operations or actions that a
// common user could do in the WAF Rule page from the Portal app/site.
var WAFList = {

  // ## Properties

  // Locators specific to HTML elements from this page object
  locators: {
    labels: {
      title: {
        className: 'page-title'
      }
    },
    buttons: {
      addNewWAFRule: {
        id: 'btn_add_new_waf_rule',
        linkText: 'Add New Custom WAF Rule',
        className: 'btn-success'
      },
      learnFromTheLogsAndAddAutoGeneratedRule: {
        linkText: 'Learn From The Logs And Add Auto-Generated Rule',
        className: 'btn-success'
      }
    }
  },

  // `WAF Rule` Page is compound mainly by a table, pagination and filter
  // components. Following properties make reference to the Page Objects of
  // those components.
  // TODO: add table PO
  // tableCustomeRules: SSLCertTable,
  // tableBuiltInRules: SSLCertTable,
  pager: Pager,
  searcher: Searcher,

  // ## Methods to retrieve references to UI elements (Selenium WebDriver
  // Element)

  /**
   * ### WAFList.getTitleLbl()
   *
   * Returns the reference to the `Title` label element (Selenium WebDriver
   * Element) from the WAF Rule page from the Portal app.
   *
   * @returns {Object} Selenium WebDriver Element
   */
  getTitleLbl: function () {
    return element(by.className(this.locators.labels.title.className));
  },

  /**
   * ### WAFList.getAddNewWAFRuleBtn()
   *
   * Returns the reference to the `Add New Custom WAF Rule` button (Selenium WebDriver
   * Element) from the WAF Rule page from the Portal app.
   *
   * @returns {Object} Selenium WebDriver Element
   */
  getAddNewWAFRuleBtn: function () {
    return element(
      by.id(this.locators.buttons.addNewWAFRule.id));
  },
  /**
   * ### WAFList.getLearnFromTheLogsAndAddAutoGeneratedRuleBtn()
   *
   * Returns the reference to the `Learn From The Logs And Add Auto-Generated Rule`
   * button (Selenium WebDriver Element) from the WAF Rule page from the Portal app.
   *
   * @returns {Object} Selenium WebDriver Element
   */
  getLearnFromTheLogsAndAddAutoGeneratedRuleBtn: function () {
    return element(
      by.partialLinkText(this.locators.buttons.learnFromTheLogsAndAddAutoGeneratedRule.linkText));
  },
  // ## Methods to interact with the WAF Rule page components

  /**
   * ### WAFList.clickAddNewWAFRule()
   *
   * Triggers a click to the `Add New WAF Rule` button from the WAF Rule
   * page from the Portal app
   *
   * @returns {Object} Promise
   */
  clickAddNewWAFRule: function () {
    return this
      .getAddNewWAFRuleBtn()
      .click();
  },
  /**
   * ### WAFList.clickLearnFromTheLogsAndAddAutoGeneratedRule()
   *
   * Triggers a click to the `Learn From The Logs And Add Auto-Generated Rule` button
   * from the WAF Rule page from the Portal app
   *
   * @returns {Object} Promise
   */
  clickLearnFromTheLogsAndAddAutoGeneratedRule: function () {
    return this
      .getLearnFromTheLogsAndAddAutoGeneratedRuleBtn()
      .click();
  },
  /**
   * ### WAFList.getTitle()
   *
   * Gets the `Title` label from the WAF Rule page
   *
   * @returns {Object} Promise
   */
  getTitle: function () {
    return this
      .getTitleLbl()
      .getText();
  },

  // ## Helper Methods

  /**
   * ### WAFList.isDisplayed()
   *
   * Checks whether the WAF Rule page is being displayed in the UI or not.
   *
   * @returns {Object} Promise
   */
  isDisplayed: function () {
    return this.searcher
      .getSearchCriteriaTxtIn()
      .isPresent();
  },
  // TODO: Add tabs and tables
  // /**
  //  * ### WAFList.searchAndGetFirstRow()
  //  *
  //  * Filters the WAF Rule table by the given criteria and returns the
  //  * first result of the table.
  //  *
  //  * @param {String} criteria, to filter
  //  *
  //  * @returns {Object} TableRow
  //  */
  // searchAndGetFirstRow: function (criteria) {
  //   this.searcher.clearSearchCriteria();
  //   this.searcher.setSearchCriteria(criteria);
  //   return this.table
  //     .getFirstRow();
  // },

  // /**
  //  * ### WAFList.searchAndClickDelete()
  //  *
  //  * Filters the WAF Rule table by the given criteria and triggers a click
  //  * on the `Delete` button of the first result of the table.
  //  *
  //  * @param {String} criteria, to filter
  //  *
  //  * @returns {Object} Promise
  //  */
  // searchAndClickDelete: function (criteria) {
  //   return this
  //     .searchAndGetFirstRow(criteria)
  //     .clickDelete();
  // },

  // /**
  //  * ### WAFList.searchAndClickEdit()
  //  *
  //  * Filters the WAF Rule table by the given criteria and triggers a click
  //  * on the `Edit` button of the first result of the table.
  //  *
  //  * @param {String} criteria, to filter
  //  *
  //  * @returns {Object} Promise
  //  */
  // searchAndClickEdit: function (criteria) {
  //   return this
  //     .searchAndGetFirstRow(criteria)
  //     .clickEdit();
  // }
};

module.exports = WAFList;
